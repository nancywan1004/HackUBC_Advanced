{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from canvasapi import Canvas\n",
    "import json"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "API_KEY=open(\".canvas_api_key\").readline().rstrip('\\n')\n",
    "API_URL = \"https://canvas.ubc.ca\"\n",
    "\n",
    "COURSE_NUM = 30739 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "canvas = Canvas(API_URL, API_KEY)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{\n",
      "    \"avatar_url\": \"https://canvas.ubc.ca/images/messages/avatar-50.png\",\n",
      "    \"created_at\": \"2017-08-12T22:28:16-07:00\",\n",
      "    \"effective_locale\": \"en-CA\",\n",
      "    \"id\": 1084,\n",
      "    \"locale\": null,\n",
      "    \"name\": \"Leqi Wan\",\n",
      "    \"permissions\": {\n",
      "        \"can_update_avatar\": true,\n",
      "        \"can_update_name\": false\n",
      "    },\n",
      "    \"short_name\": \"Leqi Wan\",\n",
      "    \"sortable_name\": \"Wan, Leqi\"\n",
      "}\n"
     ]
    }
   ],
   "source": [
    "print(json.dumps(json.loads(canvas.get_user('self').to_json()),sort_keys=True, indent=4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_topics = list(canvas.get_course(COURSE_NUM).get_discussion_topics())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Testing topic 2\n",
      "What is your favourite place on campus? 4\n",
      "What video games are you playing right now? 2\n",
      "Who likes potatoes on pizza? 8\n",
      "Favourite Eating Spots Near Campus? 6\n",
      "What do you choose?  15\n",
      "Learning Analytics Conference at UBC 1\n",
      "Hackathon Feedback 4\n",
      "What do you mean? 3\n",
      "What do you hear?  20\n",
      "What do you see? 23\n",
      "Let's Get Some Discussion Started 16\n",
      "Share your Canvas API ideas/discoveries. 0\n",
      "Hackathon Open Q&A  0\n",
      "Share things you can't do (based on technical limitations) that you wish you could. 0\n",
      "Share any difficulties/ask for help from other teams. 0\n"
     ]
    }
   ],
   "source": [
    "for t in all_topics:\n",
    "    print(t.title, t.discussion_subentry_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "What do you see? 21\n"
     ]
    }
   ],
   "source": [
    "largest = sorted(all_topics, key=lambda x: x.discussion_subentry_count, reverse=True)[0]\n",
    "\n",
    "print (largest.title, len(list(largest.get_topic_entries())))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total number of top-level entries:  84\n"
     ]
    }
   ],
   "source": [
    "all_entries = []\n",
    "for t in all_topics:\n",
    "    topic_entries = list(t.get_topic_entries())\n",
    "    all_entries.extend(topic_entries)\n",
    "print(\"total number of top-level entries: \", len(all_entries))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total number of replies:  20\n"
     ]
    }
   ],
   "source": [
    "all_replies = []\n",
    "for e in all_entries:\n",
    "    entry_replies = list(e.get_replies())\n",
    "    all_replies.extend(entry_replies)\n",
    "print(\"total number of replies: \",len(all_replies))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<p>Black n blue</p> (784626) 0\n",
      "<p>White and Gold </p> (784620) 0\n",
      "<p>Blue and black</p> (784514) 1\n",
      "<p>Black and Blue</p> (784505) 0\n",
      "<p>A dress</p> (784493) 0\n",
      "<p>Blue and Gold</p> (784481) 0\n",
      "<p>White and gold.</p> (784413) 0\n",
      "<p>white &amp; gold</p> (784397) 0\n",
      "<p>white and gold</p> (784394) 0\n",
      "<p>black and blue</p> (784390) 0\n",
      "<p>Blue and Black!</p> (784389) 0\n",
      "<p>White and gold</p> (784386) 0\n",
      "<p>White and Gold</p> (784385) 0\n",
      "<p>Blue and black</p> (784369) 0\n",
      "Blue and gold (784341) 0\n",
      "<p>I see black and blue</p>\n",
      "<p> </p> (783321) 0\n",
      "<p>blue and black</p> (783314) 0\n",
      "<p>Blue  and black</p> (783269) 0\n",
      "<p>White and gold</p> (783101) 0\n",
      "<p>White and Gold!</p> (782893) 0\n",
      "Blue and black  (774674) 1\n"
     ]
    }
   ],
   "source": [
    "for topic in largest.get_topic_entries():\n",
    "  print(topic, len(list(topic.get_replies())))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{\n",
      "    \"id\": 259702,\n",
      "    \"title\": \"What do you see?\",\n",
      "    \"last_reply_at\": \"2019-03-30T18:26:56Z\",\n",
      "    \"created_at\": \"2019-03-19T19:57:55Z\",\n",
      "    \"delayed_post_at\": null,\n",
      "    \"posted_at\": \"2019-03-22T17:35:26Z\",\n",
      "    \"assignment_id\": null,\n",
      "    \"root_topic_id\": null,\n",
      "    \"position\": null,\n",
      "    \"podcast_has_student_posts\": false,\n",
      "    \"discussion_type\": \"side_comment\",\n",
      "    \"lock_at\": null,\n",
      "    \"allow_rating\": false,\n",
      "    \"only_graders_can_rate\": false,\n",
      "    \"sort_by_rating\": false,\n",
      "    \"is_section_specific\": false,\n",
      "    \"user_name\": \"Alison Myers\",\n",
      "    \"discussion_subentry_count\": 23,\n",
      "    \"permissions\": {\n",
      "        \"attach\": false,\n",
      "        \"update\": false,\n",
      "        \"reply\": true,\n",
      "        \"delete\": false\n",
      "    },\n",
      "    \"require_initial_post\": null,\n",
      "    \"user_can_see_posts\": true,\n",
      "    \"podcast_url\": null,\n",
      "    \"read_state\": \"read\",\n",
      "    \"unread_count\": 5,\n",
      "    \"subscribed\": false,\n",
      "    \"topic_children\": [],\n",
      "    \"group_topic_children\": [],\n",
      "    \"attachments\": [],\n",
      "    \"published\": true,\n",
      "    \"can_unpublish\": false,\n",
      "    \"locked\": false,\n",
      "    \"can_lock\": true,\n",
      "    \"comments_disabled\": false,\n",
      "    \"author\": {\n",
      "        \"id\": 185698,\n",
      "        \"display_name\": \"Alison Myers\",\n",
      "        \"avatar_image_url\": \"https://canvas.ubc.ca/images/thumbnails/3669192/YXnVaQagy3XGZe4L8gPKNGfx93AqbMQpidngGFKi\",\n",
      "        \"html_url\": \"https://canvas.ubc.ca/courses/30739/users/185698\"\n",
      "    },\n",
      "    \"html_url\": \"https://canvas.ubc.ca/courses/30739/discussion_topics/259702\",\n",
      "    \"url\": \"https://canvas.ubc.ca/courses/30739/discussion_topics/259702\",\n",
      "    \"pinned\": false,\n",
      "    \"group_category_id\": null,\n",
      "    \"can_group\": false,\n",
      "    \"locked_for_user\": false,\n",
      "    \"message\": \"<p><a href=\\\"https://en.wikipedia.org/wiki/The_dress\\\">https://en.wikipedia.org/wiki/The_dress</a></p>\\r\\n<p>\\u00a0</p>\",\n",
      "    \"todo_date\": null,\n",
      "    \"course_id\": 30739\n",
      "}\n"
     ]
    }
   ],
   "source": [
    "print(json.dumps(json.loads(largest.to_json()),indent=4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('all_topics.json', 'w') as f:\n",
    "    json.dump(list(map(lambda x: json.loads(x.to_json()), all_topics)), f)\n",
    "    #json.dump(all_topics, f)\n",
    "\n",
    "with open('all_entries.json', 'w') as f:\n",
    "    json.dump(list(map(lambda x: json.loads(x.to_json()), all_entries)), f)\n",
    "\n",
    "with open('all_replies.json', 'w') as f:\n",
    "    json.dump(list(map(lambda x: json.loads(x.to_json()), all_replies)), f)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Leqi Wan\n"
     ]
    }
   ],
   "source": [
    "myusername = canvas.get_user('self').name\n",
    "print(myusername)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'course' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-14-52440e3899c5>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0massignments\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcourse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_assignments\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0massignment\u001b[0m \u001b[0;32min\u001b[0m \u001b[0massignments\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0massignment\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'course' is not defined"
     ]
    }
   ],
   "source": [
    "assignments = course.get_assignments()\n",
    "\n",
    "for assignment in assignments:\n",
    "    print(assignment)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "assignments = list(canvas.get_assignments())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Canvas API  + Learning Analytics Hackathon (March 2019) Canvas API  + Learning Analytics Hackathon (March 2019) (30739)\n"
     ]
    }
   ],
   "source": [
    "mycourse = canvas.get_course(30739)\n",
    "print(mycourse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "users = mycourse.get_users()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Farshid Agharebparast (185967)\n",
      "Kunal Aildasani (15111)\n",
      "Gagan Bhatia (36937)\n",
      "Kofi Buahin (48413)\n",
      "Cindy Cen (82974)\n",
      "Farbod Chamanian (150707)\n",
      "Lily Chen (15386)\n",
      "Tianzong Chen (2516)\n",
      "Erica Choi (32576)\n",
      "Abigail Climacosa (15854)\n",
      "Erica Commons (118474)\n",
      "Tasha Coote (197947)\n",
      "Brooke Dai (91607)\n",
      "Mary Datan (159303)\n",
      "Zi Rui Ding (91745)\n",
      "William Engle (9814)\n",
      "Homen Feng (103824)\n",
      "Jorge Flores (148295)\n",
      "John Paul Francisco (25465)\n",
      "Arwa Gazzaz (86134)\n",
      "Alexandra Gil (24988)\n",
      "Ao Lin Gong (39130)\n",
      "Michelle Gu (139267)\n",
      "Nakul Gupta (222692)\n",
      "Shubham Gupta (43103)\n",
      "Dhiraj Hariramani (84839)\n",
      "Emily Hon (212301)\n",
      "Gina Hong (25249)\n",
      "Mery Hu Zhao (39951)\n",
      "Julie Huang (15990)\n",
      "Jessica Huh (148670)\n",
      "Nicole Huynh (12473)\n",
      "JungWook Jang (152730)\n",
      "Elham E Khoda (15624)\n",
      "Jiwon Kim (63487)\n",
      "Millenia Kitikul (50754)\n",
      "Peter Ko (108134)\n",
      "Kristo Krugger (139302)\n",
      "Alan Lau (21594)\n",
      "Harrison Lee (4155)\n",
      "Justin Lee (50)\n",
      "Sein Lee (33333)\n",
      "Tony Lee (362123)\n",
      "Winnie LI (34986)\n",
      "Luanna Lin (23995)\n",
      "Andrew Liu (4190)\n",
      "Daniel Liu (117279)\n",
      "Fiana Liu (104016)\n",
      "Jerry Liu (42040)\n",
      "Xinyu Liu (59468)\n",
      "Dingfei Lu (2353)\n",
      "EMMA LU (29689)\n",
      "KEVIN LUZONG (87049)\n",
      "Michelle Ma (114528)\n",
      "Nils Maetzel (18945)\n",
      "Dhruv Mahajan (46719)\n",
      "Tarang Mahapatra (63629)\n",
      "Aliya Mohamed (131741)\n",
      "Firas Moosvi (135)\n",
      "Eduardo Muntaner Garcia (57936)\n",
      "Munkhtur Myagmar (76950)\n",
      "Alison Myers (185698)\n",
      "Shivani Mysuria (18197)\n",
      "Aaron Ngu Ngu (30135)\n",
      "Thai Nguyen Dinh (10230)\n",
      "Michael Oliver (17811)\n",
      "David Park (73904)\n",
      "Ju Hee Park (12463)\n",
      "Yi Xuan Qi (128230)\n",
      "YIFENG QIN (141008)\n",
      "Jonathan Quintanar (357098)\n",
      "Mesbah Rafin (251657)\n",
      "Daniel Ryu (34055)\n",
      "Javier Sarria Bastidas (159299)\n",
      "Stoo Sepp (164739)\n",
      "James Shen (133384)\n",
      "Roy Shi (163148)\n",
      "Sanam Shirazi (195701)\n",
      "Hardik Singhi (109239)\n",
      "Yenong Sun (28862)\n",
      "Zhaoying Sun (17596)\n",
      "Surohit Tandon (47904)\n",
      "Matthew Tang (15264)\n",
      "Towela Tembo (17711)\n",
      "Craig Thompson (49358)\n",
      "Craig Thompson (262978)\n",
      "Grayson Tilstra (362297)\n",
      "William Ting (192928)\n",
      "Lauren Tonello (163632)\n",
      "Shenia Tung (25404)\n",
      "Otakar Valek (362132)\n",
      "Patricia Varao Sousa (60563)\n",
      "Karan Vasdev (73684)\n",
      "Miriam Wagner Valladolid (96282)\n",
      "Leqi Wan (1084)\n",
      "Edward Wang (73859)\n",
      "Estella Wang (152322)\n",
      "Shuai Wang (218007)\n",
      "Stella Wang (128053)\n",
      "Zi Wang (14855)\n",
      "Julie Wei (63678)\n",
      "Xindi Wei (12574)\n",
      "Yilin Wei (2373)\n",
      "Benjamin Wu (54001)\n",
      "Heidi Wudrick (41)\n",
      "Steven Xu (21526)\n",
      "Zexu Yan (142618)\n",
      "Gary Yao (215165)\n",
      "Jiaqi Yao (45346)\n",
      "Ray Yeh (2850)\n",
      "Mohamed Yousif (344195)\n",
      "Kevin Yu (143858)\n",
      "Dong-Tao Zhang (31356)\n",
      "Peter Zhang (16535)\n",
      "Will Zhang (14655)\n",
      "Zhipian Zhang (4092)\n",
      "Bruce Zhao (215503)\n"
     ]
    }
   ],
   "source": [
    "for user in users:\n",
    "    print(user)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "me = canvas.get_user('self')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "mycourses = me.get_courses()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(mycourses)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for course in mycourses:\n",
    "    print(course)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "assignments = mycourse.get_assignments();\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for assignment in assignments:\n",
    "    print(assignment)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(json.dumps(json.loads(me.get_courses().to_json()),sort_keys=True, indent=4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(json.dumps(json.loads(mycourses.to_json()),sort_keys=True, indent=4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{\n",
      "    \"account_id\": 456,\n",
      "    \"apply_assignment_group_weights\": true,\n",
      "    \"blueprint\": false,\n",
      "    \"calendar\": {\n",
      "        \"ics\": \"https://canvas.ubc.ca/feeds/calendars/course_NBQ26wSgY0SwPphTSRlq4LAIVnA93EgkNA6RXlzW.ics\"\n",
      "    },\n",
      "    \"course_code\": \"Canvas API  + Learning Analytics Hackathon (March 2019)\",\n",
      "    \"created_at\": \"2019-03-19T18:34:38Z\",\n",
      "    \"default_view\": \"modules\",\n",
      "    \"end_at\": null,\n",
      "    \"enrollment_term_id\": 10,\n",
      "    \"enrollments\": [\n",
      "        {\n",
      "            \"enrollment_state\": \"active\",\n",
      "            \"role\": \"StudentEnrollment\",\n",
      "            \"role_id\": 3,\n",
      "            \"type\": \"student\",\n",
      "            \"user_id\": 1084\n",
      "        }\n",
      "    ],\n",
      "    \"grading_standard_id\": null,\n",
      "    \"hide_final_grades\": false,\n",
      "    \"id\": 30739,\n",
      "    \"is_public\": false,\n",
      "    \"is_public_to_auth_users\": true,\n",
      "    \"license\": \"private\",\n",
      "    \"name\": \"Canvas API  + Learning Analytics Hackathon (March 2019)\",\n",
      "    \"public_syllabus\": false,\n",
      "    \"public_syllabus_to_auth\": true,\n",
      "    \"restrict_enrollments_to_course_dates\": true,\n",
      "    \"root_account_id\": 1,\n",
      "    \"start_at\": \"2019-03-22T17:35:18Z\",\n",
      "    \"storage_quota_mb\": 4000,\n",
      "    \"time_zone\": \"America/Los_Angeles\",\n",
      "    \"uuid\": \"NBQ26wSgY0SwPphTSRlq4LAIVnA93EgkNA6RXlzW\",\n",
      "    \"workflow_state\": \"available\"\n",
      "}\n",
      "{\n",
      "    \"access_restricted_by_date\": true,\n",
      "    \"id\": 1836\n",
      "}\n",
      "{\n",
      "    \"access_restricted_by_date\": true,\n",
      "    \"id\": 5474\n",
      "}\n",
      "{\n",
      "    \"access_restricted_by_date\": true,\n",
      "    \"id\": 9388\n",
      "}\n",
      "{\n",
      "    \"access_restricted_by_date\": true,\n",
      "    \"id\": 9391\n",
      "}\n",
      "{\n",
      "    \"account_id\": 267,\n",
      "    \"apply_assignment_group_weights\": true,\n",
      "    \"blueprint\": false,\n",
      "    \"calendar\": {\n",
      "        \"ics\": \"https://canvas.ubc.ca/feeds/calendars/course_0WUGBeDMsFcTtFeZnoIzLndCsvQJ6jY8vqLKdKju.ics\"\n",
      "    },\n",
      "    \"course_code\": \"CPSC 304 201\",\n",
      "    \"created_at\": \"2018-05-24T21:39:43Z\",\n",
      "    \"default_view\": \"modules\",\n",
      "    \"end_at\": \"2019-05-02T07:00:00Z\",\n",
      "    \"enrollment_term_id\": 10,\n",
      "    \"enrollments\": [\n",
      "        {\n",
      "            \"enrollment_state\": \"active\",\n",
      "            \"role\": \"StudentEnrollment\",\n",
      "            \"role_id\": 3,\n",
      "            \"type\": \"student\",\n",
      "            \"user_id\": 1084\n",
      "        }\n",
      "    ],\n",
      "    \"grading_standard_id\": null,\n",
      "    \"hide_final_grades\": false,\n",
      "    \"id\": 18953,\n",
      "    \"is_public\": false,\n",
      "    \"is_public_to_auth_users\": false,\n",
      "    \"license\": \"private\",\n",
      "    \"name\": \"CPSC 304 201 Introduction to Relational Databases\",\n",
      "    \"public_syllabus\": false,\n",
      "    \"public_syllabus_to_auth\": false,\n",
      "    \"restrict_enrollments_to_course_dates\": false,\n",
      "    \"root_account_id\": 1,\n",
      "    \"start_at\": \"2019-01-03T05:56:00Z\",\n",
      "    \"storage_quota_mb\": 4000,\n",
      "    \"time_zone\": \"America/Los_Angeles\",\n",
      "    \"uuid\": \"0WUGBeDMsFcTtFeZnoIzLndCsvQJ6jY8vqLKdKju\",\n",
      "    \"workflow_state\": \"available\"\n",
      "}\n",
      "{\n",
      "    \"account_id\": 267,\n",
      "    \"apply_assignment_group_weights\": false,\n",
      "    \"blueprint\": false,\n",
      "    \"calendar\": {\n",
      "        \"ics\": \"https://canvas.ubc.ca/feeds/calendars/course_gOqW8n4wLdDpbXboB9HbRMN4oqpWQBaKNkuSTElL.ics\"\n",
      "    },\n",
      "    \"course_code\": \"CPSC 320 201/202\",\n",
      "    \"created_at\": \"2018-05-24T21:39:58Z\",\n",
      "    \"default_view\": \"modules\",\n",
      "    \"end_at\": null,\n",
      "    \"enrollment_term_id\": 10,\n",
      "    \"enrollments\": [\n",
      "        {\n",
      "            \"enrollment_state\": \"active\",\n",
      "            \"role\": \"StudentEnrollment\",\n",
      "            \"role_id\": 3,\n",
      "            \"type\": \"student\",\n",
      "            \"user_id\": 1084\n",
      "        }\n",
      "    ],\n",
      "    \"grading_standard_id\": null,\n",
      "    \"hide_final_grades\": false,\n",
      "    \"id\": 18960,\n",
      "    \"is_public\": false,\n",
      "    \"is_public_to_auth_users\": false,\n",
      "    \"license\": \"private\",\n",
      "    \"name\": \"CPSC 320 201/202 Intermediate Algorithm Design and Analysis\",\n",
      "    \"public_syllabus\": false,\n",
      "    \"public_syllabus_to_auth\": false,\n",
      "    \"restrict_enrollments_to_course_dates\": false,\n",
      "    \"root_account_id\": 1,\n",
      "    \"start_at\": \"2019-01-01T22:09:14Z\",\n",
      "    \"storage_quota_mb\": 4000,\n",
      "    \"time_zone\": \"America/Los_Angeles\",\n",
      "    \"uuid\": \"gOqW8n4wLdDpbXboB9HbRMN4oqpWQBaKNkuSTElL\",\n",
      "    \"workflow_state\": \"available\"\n",
      "}\n",
      "{\n",
      "    \"access_restricted_by_date\": true,\n",
      "    \"id\": 579\n",
      "}\n",
      "{\n",
      "    \"account_id\": 271,\n",
      "    \"apply_assignment_group_weights\": false,\n",
      "    \"blueprint\": false,\n",
      "    \"calendar\": {\n",
      "        \"ics\": \"https://canvas.ubc.ca/feeds/calendars/course_wwfD9Z1m8uTg8Ecgk1W8OLEtALNl8dwy6ZlKrP6q.ics\"\n",
      "    },\n",
      "    \"course_code\": \"MATH 303 202\",\n",
      "    \"course_format\": \"on_campus\",\n",
      "    \"created_at\": \"2018-05-25T06:24:53Z\",\n",
      "    \"default_view\": \"syllabus\",\n",
      "    \"end_at\": \"2019-04-05T07:00:00Z\",\n",
      "    \"enrollment_term_id\": 10,\n",
      "    \"enrollments\": [\n",
      "        {\n",
      "            \"enrollment_state\": \"active\",\n",
      "            \"role\": \"StudentEnrollment\",\n",
      "            \"role_id\": 3,\n",
      "            \"type\": \"student\",\n",
      "            \"user_id\": 1084\n",
      "        }\n",
      "    ],\n",
      "    \"grading_standard_id\": null,\n",
      "    \"hide_final_grades\": false,\n",
      "    \"id\": 20695,\n",
      "    \"is_public\": false,\n",
      "    \"is_public_to_auth_users\": false,\n",
      "    \"license\": \"private\",\n",
      "    \"name\": \"MATH 303 202 Introduction to Stochastic Processes\",\n",
      "    \"public_syllabus\": false,\n",
      "    \"public_syllabus_to_auth\": false,\n",
      "    \"restrict_enrollments_to_course_dates\": false,\n",
      "    \"root_account_id\": 1,\n",
      "    \"start_at\": \"2019-01-02T08:00:00Z\",\n",
      "    \"storage_quota_mb\": 4000,\n",
      "    \"time_zone\": \"America/Los_Angeles\",\n",
      "    \"uuid\": \"wwfD9Z1m8uTg8Ecgk1W8OLEtALNl8dwy6ZlKrP6q\",\n",
      "    \"workflow_state\": \"available\"\n",
      "}\n",
      "{\n",
      "    \"access_restricted_by_date\": true,\n",
      "    \"id\": 5794\n",
      "}\n",
      "{\n",
      "    \"account_id\": 500,\n",
      "    \"apply_assignment_group_weights\": false,\n",
      "    \"blueprint\": false,\n",
      "    \"calendar\": {\n",
      "        \"ics\": \"https://canvas.ubc.ca/feeds/calendars/course_jHkP7OsHbpvWVc58ZMPMpbiKVJ5SqnOh4DLhbxSt.ics\"\n",
      "    },\n",
      "    \"course_code\": \"SCOP-W19\",\n",
      "    \"created_at\": \"2018-10-29T21:10:10Z\",\n",
      "    \"default_view\": \"wiki\",\n",
      "    \"end_at\": \"2023-11-01T07:00:00Z\",\n",
      "    \"enrollment_term_id\": 2,\n",
      "    \"enrollments\": [\n",
      "        {\n",
      "            \"enrollment_state\": \"active\",\n",
      "            \"role\": \"StudentEnrollment\",\n",
      "            \"role_id\": 3,\n",
      "            \"type\": \"student\",\n",
      "            \"user_id\": 1084\n",
      "        }\n",
      "    ],\n",
      "    \"grading_standard_id\": null,\n",
      "    \"hide_final_grades\": false,\n",
      "    \"id\": 26741,\n",
      "    \"is_public\": false,\n",
      "    \"is_public_to_auth_users\": false,\n",
      "    \"license\": \"private\",\n",
      "    \"name\": \"Science Co-op Workshop Winter 2019\",\n",
      "    \"public_syllabus\": false,\n",
      "    \"public_syllabus_to_auth\": false,\n",
      "    \"restrict_enrollments_to_course_dates\": true,\n",
      "    \"root_account_id\": 1,\n",
      "    \"start_at\": \"2018-11-01T07:00:00Z\",\n",
      "    \"storage_quota_mb\": 4000,\n",
      "    \"time_zone\": \"America/Los_Angeles\",\n",
      "    \"uuid\": \"jHkP7OsHbpvWVc58ZMPMpbiKVJ5SqnOh4DLhbxSt\",\n",
      "    \"workflow_state\": \"available\"\n",
      "}\n",
      "{\n",
      "    \"account_id\": 262,\n",
      "    \"apply_assignment_group_weights\": false,\n",
      "    \"blueprint\": false,\n",
      "    \"calendar\": {\n",
      "        \"ics\": \"https://canvas.ubc.ca/feeds/calendars/course_434nVX17OPwEjww9LbtEiUNNvLLDBNNbUmE8YH7r.ics\"\n",
      "    },\n",
      "    \"course_code\": \"STAT 306 201\",\n",
      "    \"created_at\": \"2018-05-25T09:39:18Z\",\n",
      "    \"default_view\": \"feed\",\n",
      "    \"end_at\": \"2019-05-30T07:00:00Z\",\n",
      "    \"enrollment_term_id\": 10,\n",
      "    \"enrollments\": [\n",
      "        {\n",
      "            \"enrollment_state\": \"active\",\n",
      "            \"role\": \"StudentEnrollment\",\n",
      "            \"role_id\": 3,\n",
      "            \"type\": \"student\",\n",
      "            \"user_id\": 1084\n",
      "        }\n",
      "    ],\n",
      "    \"grading_standard_id\": null,\n",
      "    \"hide_final_grades\": false,\n",
      "    \"id\": 21576,\n",
      "    \"is_public\": null,\n",
      "    \"is_public_to_auth_users\": false,\n",
      "    \"license\": null,\n",
      "    \"name\": \"STAT 306 201 Finding Relationships in Data\",\n",
      "    \"public_syllabus\": false,\n",
      "    \"public_syllabus_to_auth\": false,\n",
      "    \"restrict_enrollments_to_course_dates\": false,\n",
      "    \"root_account_id\": 1,\n",
      "    \"start_at\": \"2019-01-02T08:00:00Z\",\n",
      "    \"storage_quota_mb\": 4000,\n",
      "    \"time_zone\": \"America/Los_Angeles\",\n",
      "    \"uuid\": \"434nVX17OPwEjww9LbtEiUNNvLLDBNNbUmE8YH7r\",\n",
      "    \"workflow_state\": \"available\"\n",
      "}\n",
      "{\n",
      "    \"access_restricted_by_date\": true,\n",
      "    \"id\": 5773\n",
      "}\n"
     ]
    }
   ],
   "source": [
    "for c in mycourses:\n",
    "    print(json.dumps(json.loads(c.to_json()),sort_keys=True, indent=4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "cpsc304 = canvas.get_course(18953)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "user304 = cpsc304.get_users()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<PaginatedList of type User>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "user304"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Noah Adams (3787)\n",
      "Seiyoung Ahn (15044)\n",
      "Daniel Anatolie (181125)\n",
      "Pablo Arellano Sanchez Lara (73321)\n",
      "Enid Au (118454)\n",
      "Jenna Bains (29708)\n",
      "Ashley Barkworth (192812)\n",
      "Chris Bolton (34788)\n",
      "Lindsey Burnett (113143)\n",
      "Tristan Calderbank (14842)\n",
      "Amelia Casciola (33173)\n",
      "Joanne Chan (73347)\n",
      "Victoria Chang (195648)\n",
      "Daniel Chawla (144874)\n",
      "Eric Chen (66897)\n",
      "Jacky Chen (15068)\n",
      "Susan Chen (14848)\n",
      "Jordan Cheng (89890)\n",
      "Josh Cheung (191191)\n",
      "Jordan Chiu (149531)\n",
      "Andrew Choi (13105)\n",
      "Bryan Choi (103870)\n",
      "Joochan Choi (15706)\n",
      "Min Kyu Choi (73869)\n",
      "Marina Chun (50161)\n",
      "Jakrarat Chunnananda (39850)\n",
      "Adam Collins (6886)\n",
      "Angeli Corpin (139154)\n",
      "Rory Court (209200)\n",
      "Brendan Cuddihy (192345)\n",
      "Kayla Curtis (192813)\n",
      "Kelly Dang (144980)\n",
      "Mark Davidson (103971)\n",
      "Xavier dela Cruz (120706)\n",
      "Yue Deng (111471)\n",
      "Murtaza Dibbo (15414)\n",
      "Chi Duong (32691)\n",
      "Zeki Ekmekci (212819)\n",
      "Sadek Elbetar (14773)\n",
      "Jan Louis Evangelista (41482)\n",
      "MONA FADAVIARDAKANI (134337)\n",
      "Chenhao Fan (145008)\n",
      "Vera Fan (4705)\n",
      "Jiang Feng (234045)\n",
      "Alan Fisher (15651)\n",
      "Alexander Ford (212279)\n",
      "Cody Gagnon (15203)\n",
      "Ming Gao (192805)\n",
      "Ya Gao (82749)\n",
      "Parth Garg (153181)\n",
      "Alexis Gervacio (14693)\n",
      "Seif Ghazi (103843)\n",
      "Andrew Gourley (228365)\n",
      "Shreeshaa Goyal (44892)\n",
      "Mario Grebelski (188901)\n",
      "Laura Greenstreet (15712)\n",
      "Shri Grover (196442)\n",
      "Gregory Gzik (195649)\n",
      "Jason Hall (73872)\n",
      "Gavin Ham (14670)\n",
      "Frederic Alexandre Hayek (206976)\n",
      "Austin He (33134)\n",
      "Yizhuo He (82167)\n",
      "Peter Hodgson (212596)\n",
      "Shannon Hogan (17592)\n",
      "Jarrett Huang (192752)\n",
      "Cameron Huynh (149449)\n",
      "Hazra Imran (223371)\n",
      "FARNOOSH JAVADI FISHANI (134766)\n",
      "Jun Yu David Ju (14966)\n",
      "Mayesha Kabir (44799)\n",
      "Dianna Kan (32569)\n",
      "Alice Kim (15001)\n",
      "Andy Kim (191204)\n",
      "Taiga Kimura (15635)\n",
      "Michelle Kong (192767)\n",
      "Nicholas Kong (16526)\n",
      "Nada Kourkmas (15646)\n",
      "Kristen Kwong (21562)\n",
      "Andrew Lam (192811)\n",
      "Wesley Lam (14656)\n",
      "Liam Larson (96456)\n",
      "Ranky Lau (149525)\n",
      "Richard Lau (109257)\n",
      "Kelsey Law (15060)\n",
      "Gerald Lee (15089)\n",
      "Kevin Lee (144969)\n",
      "Ryan Lee (14696)\n",
      "Kalli Leung (191201)\n",
      "Daniel Levy (196904)\n",
      "Anthony Li (33251)\n",
      "Cecilia Li (82741)\n",
      "Stephen Li (192806)\n",
      "Tim Li (449)\n",
      "Yvonne Li (195578)\n",
      "Skylar Liang (33184)\n",
      "Cindy Lim (47187)\n",
      "Andy Lin (15058)\n",
      "David Liu (62705)\n",
      "Jordan Liu (14702)\n",
      "Benny Lo (196905)\n",
      "Siyan Luo (191538)\n",
      "Marco Ma (41176)\n",
      "Mark McConnell (45367)\n",
      "Sam McConnell (15018)\n",
      "James Meng (144968)\n",
      "Natasha Miner (70615)\n",
      "Caleigh Minshall (48522)\n",
      "Robert Mo (14726)\n",
      "Tyler Moore (14631)\n",
      "Quintin Muncaster (38479)\n",
      "Hanae Nakajima (21917)\n",
      "Aayush Nanda (33507)\n",
      "Pranav Narang (103808)\n",
      "Dmitry Narkevich (24528)\n",
      "Wen Xing Pan (34376)\n",
      "Sam Parhimchik (195666)\n",
      "Harsh Patel (192799)\n",
      "Julilla Paul (120693)\n",
      "Koby Qu (45489)\n",
      "ARYA RASHTCHIAN (137101)\n",
      "Timothy Schwarz (120702)\n",
      "John Seto (315)\n",
      "Mark Shan (88973)\n",
      "Matthew Shin (14798)\n",
      "Frances Sin (14733)\n",
      "Raymond Situ (190410)\n",
      "Seiji Smith (139000)\n",
      "Simeon Stakic (116944)\n",
      "Kevin Sun (170593)\n",
      "Nanda Syahrasyad (149520)\n",
      "Andy Tang (15019)\n",
      "Evangeline Tay (139017)\n",
      "Angela Tian (34191)\n",
      "Anita Tse (14978)\n",
      "Cindy Tu (192798)\n",
      "Slava Uryumtsev (41116)\n",
      "Leqi Wan (1084)\n",
      "Hao Wang (3623)\n",
      "Ren Wang (29302)\n",
      "Yanzhao Wang (149433)\n",
      "Xindi Wei (12574)\n",
      "Yijia Wen (169311)\n",
      "Taylor Whitney (212269)\n",
      "Ryan Wirth (110372)\n",
      "Annie Wong (71486)\n",
      "Kevin Wong (88975)\n",
      "Michelle Wong (196439)\n",
      "Stephanie Wong (14720)\n",
      "Uma Wu (192797)\n",
      "SIQIAO XIE (15123)\n",
      "Kevin Xu (26546)\n",
      "Tina Yang (15073)\n",
      "Cheryl Yao (22717)\n",
      "Vickie Yen (195903)\n",
      "Xueqi Zeng (33256)\n",
      "Alice Zhang (42134)\n",
      "Bruce Zhang (139006)\n",
      "Grace Zhang (33153)\n",
      "John Zhang (15658)\n",
      "Michael Zhang (189080)\n",
      "Terry Zhang (104015)\n",
      "Jiaqi Zhao (28841)\n",
      "Jacky Zheng (111473)\n",
      "Xiaojie Zhou (103822)\n",
      "Youcheng Zhu (144977)\n"
     ]
    }
   ],
   "source": [
    "for user in user304:\n",
    "    print(user)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "canvas.get_course(18953).id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(canvas.get_course(18953))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'courses' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-28-50c93680d501>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mcourse_ids\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mc\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcourses\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m     \u001b[0;32mif\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'access_restricted_by_date'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_json\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m         \u001b[0;32mcontinue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'courses' is not defined"
     ]
    }
   ],
   "source": [
    "course_ids = []\n",
    "\n",
    "for c in courses:\n",
    "    if('access_restricted_by_date' in c.to_json()):\n",
    "        continue\n",
    "    else:\n",
    "        print(c.name)\n",
    "        course_ids.append(c.name)\n",
    "    \n",
    "print(course_ids)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "30739\n",
      "18953\n",
      "18960\n",
      "20695\n",
      "26741\n",
      "21576\n",
      "[30739, 18953, 18960, 20695, 26741, 21576]\n"
     ]
    }
   ],
   "source": [
    "course_ids = []\n",
    "\n",
    "for c in mycourses:\n",
    "    if('access_restricted_by_date' in c.to_json()):\n",
    "        continue\n",
    "    else:\n",
    "        print(c.id)\n",
    "        course_ids.append(c.id)\n",
    "    \n",
    "print(course_ids)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Farshid Agharebparast (185967)\n",
      "Kunal Aildasani (15111)\n",
      "Gagan Bhatia (36937)\n",
      "Kofi Buahin (48413)\n",
      "Cindy Cen (82974)\n",
      "Farbod Chamanian (150707)\n",
      "Lily Chen (15386)\n",
      "Tianzong Chen (2516)\n",
      "Erica Choi (32576)\n",
      "Abigail Climacosa (15854)\n",
      "Erica Commons (118474)\n",
      "Tasha Coote (197947)\n",
      "Brooke Dai (91607)\n",
      "Mary Datan (159303)\n",
      "Zi Rui Ding (91745)\n",
      "Homen Feng (103824)\n",
      "Jorge Flores (148295)\n",
      "John Paul Francisco (25465)\n",
      "Arwa Gazzaz (86134)\n",
      "Alexandra Gil (24988)\n",
      "Ao Lin Gong (39130)\n",
      "Michelle Gu (139267)\n",
      "Nakul Gupta (222692)\n",
      "Shubham Gupta (43103)\n",
      "Dhiraj Hariramani (84839)\n",
      "Emily Hon (212301)\n",
      "Gina Hong (25249)\n",
      "Mery Hu Zhao (39951)\n",
      "Julie Huang (15990)\n",
      "Jessica Huh (148670)\n",
      "Nicole Huynh (12473)\n",
      "JungWook Jang (152730)\n",
      "Elham E Khoda (15624)\n",
      "Jiwon Kim (63487)\n",
      "Millenia Kitikul (50754)\n",
      "Peter Ko (108134)\n",
      "Kristo Krugger (139302)\n",
      "Alan Lau (21594)\n",
      "Harrison Lee (4155)\n",
      "Sein Lee (33333)\n",
      "Tony Lee (362123)\n",
      "Winnie LI (34986)\n",
      "Luanna Lin (23995)\n",
      "Andrew Liu (4190)\n",
      "Daniel Liu (117279)\n",
      "Fiana Liu (104016)\n",
      "Jerry Liu (42040)\n",
      "Xinyu Liu (59468)\n",
      "Dingfei Lu (2353)\n",
      "EMMA LU (29689)\n",
      "KEVIN LUZONG (87049)\n",
      "Michelle Ma (114528)\n",
      "Nils Maetzel (18945)\n",
      "Dhruv Mahajan (46719)\n",
      "Tarang Mahapatra (63629)\n",
      "Aliya Mohamed (131741)\n",
      "Eduardo Muntaner Garcia (57936)\n",
      "Munkhtur Myagmar (76950)\n",
      "Shivani Mysuria (18197)\n",
      "Aaron Ngu Ngu (30135)\n",
      "Thai Nguyen Dinh (10230)\n",
      "Michael Oliver (17811)\n",
      "David Park (73904)\n",
      "Ju Hee Park (12463)\n",
      "Yi Xuan Qi (128230)\n",
      "YIFENG QIN (141008)\n",
      "Jonathan Quintanar (357098)\n",
      "Mesbah Rafin (251657)\n",
      "Daniel Ryu (34055)\n",
      "Javier Sarria Bastidas (159299)\n",
      "James Shen (133384)\n",
      "Roy Shi (163148)\n",
      "Hardik Singhi (109239)\n",
      "Yenong Sun (28862)\n",
      "Zhaoying Sun (17596)\n",
      "Surohit Tandon (47904)\n",
      "Matthew Tang (15264)\n",
      "Towela Tembo (17711)\n",
      "Craig Thompson (262978)\n",
      "Grayson Tilstra (362297)\n",
      "William Ting (192928)\n",
      "Lauren Tonello (163632)\n",
      "Shenia Tung (25404)\n",
      "Otakar Valek (362132)\n",
      "Patricia Varao Sousa (60563)\n",
      "Karan Vasdev (73684)\n",
      "Miriam Wagner Valladolid (96282)\n",
      "Leqi Wan (1084)\n",
      "Edward Wang (73859)\n",
      "Estella Wang (152322)\n",
      "Shuai Wang (218007)\n",
      "Stella Wang (128053)\n",
      "Zi Wang (14855)\n",
      "Julie Wei (63678)\n",
      "Xindi Wei (12574)\n",
      "Yilin Wei (2373)\n",
      "Benjamin Wu (54001)\n",
      "Heidi Wudrick (41)\n",
      "Steven Xu (21526)\n",
      "Zexu Yan (142618)\n",
      "Gary Yao (215165)\n",
      "Jiaqi Yao (45346)\n",
      "Ray Yeh (2850)\n",
      "Mohamed Yousif (344195)\n",
      "Kevin Yu (143858)\n",
      "Dong-Tao Zhang (31356)\n",
      "Peter Zhang (16535)\n",
      "Will Zhang (14655)\n",
      "Zhipian Zhang (4092)\n",
      "Bruce Zhao (215503)\n",
      "Noah Adams (3787)\n",
      "Seiyoung Ahn (15044)\n",
      "Daniel Anatolie (181125)\n",
      "Pablo Arellano Sanchez Lara (73321)\n",
      "Enid Au (118454)\n",
      "Jenna Bains (29708)\n",
      "Ashley Barkworth (192812)\n",
      "Chris Bolton (34788)\n",
      "Lindsey Burnett (113143)\n",
      "Tristan Calderbank (14842)\n",
      "Amelia Casciola (33173)\n",
      "Joanne Chan (73347)\n",
      "Victoria Chang (195648)\n",
      "Daniel Chawla (144874)\n",
      "Eric Chen (66897)\n",
      "Jacky Chen (15068)\n",
      "Susan Chen (14848)\n",
      "Jordan Cheng (89890)\n",
      "Josh Cheung (191191)\n",
      "Jordan Chiu (149531)\n",
      "Andrew Choi (13105)\n",
      "Bryan Choi (103870)\n",
      "Joochan Choi (15706)\n",
      "Min Kyu Choi (73869)\n",
      "Marina Chun (50161)\n",
      "Jakrarat Chunnananda (39850)\n",
      "Adam Collins (6886)\n",
      "Angeli Corpin (139154)\n",
      "Rory Court (209200)\n",
      "Brendan Cuddihy (192345)\n",
      "Kayla Curtis (192813)\n",
      "Kelly Dang (144980)\n",
      "Mark Davidson (103971)\n",
      "Xavier dela Cruz (120706)\n",
      "Yue Deng (111471)\n",
      "Murtaza Dibbo (15414)\n",
      "Chi Duong (32691)\n",
      "Zeki Ekmekci (212819)\n",
      "Sadek Elbetar (14773)\n",
      "Jan Louis Evangelista (41482)\n",
      "Chenhao Fan (145008)\n",
      "Vera Fan (4705)\n",
      "Jiang Feng (234045)\n",
      "Alan Fisher (15651)\n",
      "Alexander Ford (212279)\n",
      "Cody Gagnon (15203)\n",
      "Ming Gao (192805)\n",
      "Ya Gao (82749)\n",
      "Parth Garg (153181)\n",
      "Alexis Gervacio (14693)\n",
      "Seif Ghazi (103843)\n",
      "Andrew Gourley (228365)\n",
      "Shreeshaa Goyal (44892)\n",
      "Mario Grebelski (188901)\n",
      "Laura Greenstreet (15712)\n",
      "Shri Grover (196442)\n",
      "Gregory Gzik (195649)\n",
      "Jason Hall (73872)\n",
      "Gavin Ham (14670)\n",
      "Frederic Alexandre Hayek (206976)\n",
      "Austin He (33134)\n",
      "Yizhuo He (82167)\n",
      "Peter Hodgson (212596)\n",
      "Shannon Hogan (17592)\n",
      "Jarrett Huang (192752)\n",
      "Cameron Huynh (149449)\n",
      "Jun Yu David Ju (14966)\n",
      "Mayesha Kabir (44799)\n",
      "Dianna Kan (32569)\n",
      "Alice Kim (15001)\n",
      "Andy Kim (191204)\n",
      "Taiga Kimura (15635)\n",
      "Michelle Kong (192767)\n",
      "Nicholas Kong (16526)\n",
      "Nada Kourkmas (15646)\n",
      "Andrew Lam (192811)\n",
      "Wesley Lam (14656)\n",
      "Liam Larson (96456)\n",
      "Ranky Lau (149525)\n",
      "Richard Lau (109257)\n",
      "Kelsey Law (15060)\n",
      "Gerald Lee (15089)\n",
      "Kevin Lee (144969)\n",
      "Ryan Lee (14696)\n",
      "Kalli Leung (191201)\n",
      "Daniel Levy (196904)\n",
      "Anthony Li (33251)\n",
      "Cecilia Li (82741)\n",
      "Stephen Li (192806)\n",
      "Yvonne Li (195578)\n",
      "Skylar Liang (33184)\n",
      "Cindy Lim (47187)\n",
      "Andy Lin (15058)\n",
      "David Liu (62705)\n",
      "Jordan Liu (14702)\n",
      "Benny Lo (196905)\n",
      "Marco Ma (41176)\n",
      "Mark McConnell (45367)\n",
      "Sam McConnell (15018)\n",
      "James Meng (144968)\n",
      "Natasha Miner (70615)\n",
      "Caleigh Minshall (48522)\n",
      "Robert Mo (14726)\n",
      "Tyler Moore (14631)\n",
      "Quintin Muncaster (38479)\n",
      "Hanae Nakajima (21917)\n",
      "Aayush Nanda (33507)\n",
      "Pranav Narang (103808)\n",
      "Dmitry Narkevich (24528)\n",
      "Wen Xing Pan (34376)\n",
      "Sam Parhimchik (195666)\n",
      "Harsh Patel (192799)\n",
      "Julilla Paul (120693)\n",
      "Koby Qu (45489)\n",
      "Timothy Schwarz (120702)\n",
      "Mark Shan (88973)\n",
      "Matthew Shin (14798)\n",
      "Frances Sin (14733)\n",
      "Raymond Situ (190410)\n",
      "Seiji Smith (139000)\n",
      "Simeon Stakic (116944)\n",
      "Kevin Sun (170593)\n",
      "Nanda Syahrasyad (149520)\n",
      "Andy Tang (15019)\n",
      "Evangeline Tay (139017)\n",
      "Angela Tian (34191)\n",
      "Anita Tse (14978)\n",
      "Cindy Tu (192798)\n",
      "Slava Uryumtsev (41116)\n",
      "Leqi Wan (1084)\n",
      "Hao Wang (3623)\n",
      "Ren Wang (29302)\n",
      "Yanzhao Wang (149433)\n",
      "Xindi Wei (12574)\n",
      "Taylor Whitney (212269)\n",
      "Ryan Wirth (110372)\n",
      "Annie Wong (71486)\n",
      "Kevin Wong (88975)\n",
      "Michelle Wong (196439)\n",
      "Stephanie Wong (14720)\n",
      "Uma Wu (192797)\n",
      "SIQIAO XIE (15123)\n",
      "Kevin Xu (26546)\n",
      "Tina Yang (15073)\n",
      "Cheryl Yao (22717)\n",
      "Vickie Yen (195903)\n",
      "Xueqi Zeng (33256)\n",
      "Alice Zhang (42134)\n",
      "Bruce Zhang (139006)\n",
      "Grace Zhang (33153)\n",
      "John Zhang (15658)\n",
      "Michael Zhang (189080)\n",
      "Terry Zhang (104015)\n",
      "Jiaqi Zhao (28841)\n",
      "Jacky Zheng (111473)\n",
      "Xiaojie Zhou (103822)\n",
      "Youcheng Zhu (144977)\n",
      "Marvin Agonos (68646)\n",
      "Naeema Al-Mridha (28447)\n",
      "Samuel Allan (30959)\n",
      "Tiara Allidina (111638)\n",
      "Rithvik Alluri (82270)\n",
      "Claire Anderson (14903)\n",
      "Regina Arcilla (109313)\n",
      "Seb Ban (16465)\n",
      "Sahil Bansal (28458)\n",
      "Ashley Barkworth (192812)\n",
      "Breyanne Bautista (25369)\n",
      "Shannon Benson (193752)\n",
      "Jessica Bo (14859)\n",
      "Cristian Brazales Molina (30156)\n",
      "Claude Bu (149519)\n",
      "Matthew Cam (21143)\n",
      "Yichen Cao (32440)\n",
      "Sebastiano Carlucci (33214)\n",
      "Amelia Casciola (33173)\n",
      "Robyn Castro (49632)\n",
      "Alex Champagne (33269)\n",
      "Raphael Chang Menoni (14742)\n",
      "Jeffrey Chang (71461)\n",
      "Benson Chen (15075)\n",
      "Janet Chen (191200)\n",
      "Rex Chen (197172)\n",
      "Susan Chen (14848)\n",
      "Terence Chen (43690)\n",
      "Victor Chen (15179)\n",
      "Zikun Chen (120627)\n",
      "Jordan Cheng (89890)\n",
      "Pengyu Cheng (33963)\n",
      "Timothy Cheng (149521)\n",
      "Adle Chiam Chiam (14770)\n",
      "Justin Chiasson (25186)\n",
      "Joochan Choi (15706)\n",
      "Lydia Choi (34261)\n",
      "William Choi (33189)\n",
      "Chantal Chung (31455)\n",
      "Janie Chung (34264)\n",
      "Mary Chung (125965)\n",
      "Adam Collins (6886)\n",
      "Dama Correch (83145)\n",
      "Alex Cotic-Ehn (209141)\n",
      "Bronwyn Damm (73323)\n",
      "Kelly Dang (144980)\n",
      "Rachit Dangayach (149500)\n",
      "Mark Davidson (103971)\n",
      "Yue Deng (111471)\n",
      "Anas Desouky (33236)\n",
      "Sheng Di (44877)\n",
      "Zi Rui Ding (91745)\n",
      "William Dougall (33020)\n",
      "Artun Duman (96248)\n",
      "Eric Duong (14829)\n",
      "Karim Eldegwy (33240)\n",
      "Bebo Elhosary (39872)\n",
      "Dan Estrin (139188)\n",
      "Long Yan Emily Fan (63632)\n",
      "Vera Fan (4705)\n",
      "Daniel Fang (111481)\n",
      "Farid Faraji (14721)\n",
      "Homen Feng (103824)\n",
      "Noah Finkielsztein (40090)\n",
      "Emily Fong (138995)\n",
      "Joao Freitas (133375)\n",
      "Darren Fu (14784)\n",
      "Mikayla Gairns (72177)\n",
      "Shinya Gao (3603)\n",
      "Ya Gao (82749)\n",
      "Hannah Generoso (15134)\n",
      "Katherine Germano De Aquino Lima (16518)\n",
      "Harpaul Gill (126002)\n",
      "Sam Goldwax (191198)\n",
      "Emily Gong (192235)\n",
      "Shreeshaa Goyal (44892)\n",
      "Anders Grasdal (34338)\n",
      "Mario Grebelski (188901)\n",
      "Shri Grover (196442)\n",
      "William Gu (33169)\n",
      "Nishat Gupta (46070)\n",
      "Ali Haghani (96422)\n",
      "Huili Han (31343)\n",
      "Akshay Handa (42260)\n",
      "Quinn Hanson (32606)\n",
      "Steven Harlos (195908)\n",
      "Amelia He (27529)\n",
      "Yizhuo He (82167)\n",
      "Dillon Higa (82056)\n",
      "Kevin Ho (21744)\n",
      "Brian Hong (15570)\n",
      "Gina Hong (25249)\n",
      "Sakib Hossain (15146)\n",
      "Jacob Hotz (25712)\n",
      "Chongqing Hou (141010)\n",
      "Kipp Hsieh (15137)\n",
      "Chenming Hu (95041)\n",
      "Grace Hu (34505)\n",
      "Sylvia Hu (13003)\n",
      "David Huang (33033)\n",
      "Hao Huang (45487)\n",
      "Jacqueline Huang (2790)\n",
      "KuanMin Huang (25352)\n",
      "Cameron Huynh (149449)\n",
      "Derin Ibikunle (33195)\n",
      "Akshat Jain (163645)\n",
      "Yaash Jain (16080)\n",
      "Anthony Jakob (180822)\n",
      "Nishad Jamaldeen (15457)\n",
      "Jamie Jeon (57933)\n",
      "Emily Jia (39040)\n",
      "Ruonan Jia (33172)\n",
      "Yuncheng Jia (149492)\n",
      "Kyle Jiang (33211)\n",
      "Dianna Kan (32569)\n",
      "Harminder Kandola (32964)\n",
      "Braedyn Kenzie (195774)\n",
      "Saif Khan (197864)\n",
      "Aman Khinda (144957)\n",
      "Andy Kim (191204)\n",
      "Jun Kim (32205)\n",
      "Jillian Kong (14911)\n",
      "Kristo Krugger (139302)\n",
      "Eugenie Lai (191345)\n",
      "Yongxin Lai (50102)\n",
      "Jian Lan (85386)\n",
      "Melody Lan (13805)\n",
      "Christian Laurence (15322)\n",
      "Eishan Lawrence (33265)\n",
      "Etienne Le Bouder (14708)\n",
      "Charmaine Lee (191736)\n",
      "Daniel Lee (111547)\n",
      "Justin Lee (191422)\n",
      "Kevin Lee (144969)\n",
      "Peter Lee (73283)\n",
      "Seungyup Lee (24140)\n",
      "Anthony Li (33251)\n",
      "David Li (191208)\n",
      "Jiayi Li (16457)\n",
      "Mingyang Li (117156)\n",
      "Ricky Li (135802)\n",
      "Songyang Li (34750)\n",
      "Tony Li (39857)\n",
      "Wuyang Li (15349)\n",
      "Yvonne Li (195578)\n",
      "Zhe Li (46280)\n",
      "David Liang (14876)\n",
      "Cindy Lim (47187)\n",
      "William Lim (15661)\n",
      "Hannah Lin (40147)\n",
      "Stanford Lin (1580)\n",
      "Rowan Lindsay (48126)\n",
      "Andrew Liu (33238)\n",
      "Daniel Liu (117279)\n",
      "David Liu (62705)\n",
      "Eric Liu (14705)\n",
      "Ever Liu (33358)\n",
      "Jordan Liu (14702)\n",
      "Michael Liu (73308)\n",
      "Monica Liu (194797)\n",
      "Vandy Liu (42071)\n",
      "Bryan Lo (83259)\n",
      "Weixi Long (16563)\n",
      "Dylan Lu (15540)\n",
      "Jie Lu (41832)\n",
      "Kaiming LU (47349)\n",
      "Eric Ma (137287)\n",
      "Marco Ma (41176)\n",
      "Jennifer MacFarlane (88959)\n",
      "Andrea Magbanua (111595)\n",
      "Tarang Mahapatra (63629)\n",
      "Aya Makhambetova (16435)\n",
      "Yi Ang Mao (31097)\n",
      "Tim Matsumoto (192657)\n",
      "Giulia Mattia (20825)\n",
      "Natasha Mattson (17152)\n",
      "Sahil Mazmudar (14793)\n",
      "Morgan Mo (73278)\n",
      "Ali Mohamed (149496)\n",
      "Cormac Mollitor (111788)\n",
      "Haseenah Molumo (12665)\n",
      "Tyler Moore (14631)\n",
      "Conor Morrison (163331)\n",
      "Nikki Motevaselolhagh (73300)\n",
      "Manlam Mou (166934)\n",
      "Daryn Mulholland (119558)\n",
      "GURVEER KAUR NA (151258)\n",
      "Hanae Nakajima (21917)\n",
      "Emma Nakamoto (13024)\n",
      "Chris Ng (149511)\n",
      "Philip Ng (34649)\n",
      "Natalie Ngan (190989)\n",
      "Kevin Nguyen (116920)\n",
      "Charlene Nicer (32713)\n",
      "Edmund Oh (13033)\n",
      "Ryan Oh (14641)\n",
      "Samuel Or (139001)\n",
      "Ryan Pattyson (138983)\n",
      "Emre Pekel (198176)\n",
      "Egor Peshkov (105374)\n",
      "Umut Polat (49488)\n",
      "Alex Ponomarov (44071)\n",
      "Caelin Preston (33191)\n",
      "Rodrigo Proen¿a (149523)\n",
      "Amy Promhouse (118481)\n",
      "Koby Qu (45489)\n",
      "Karn Rahal (15861)\n",
      "Ramon Rakow (153085)\n",
      "Josh Rayo (162259)\n",
      "Sarah Reny (168107)\n",
      "Michael Ruby (30161)\n",
      "Laura Ruiz (21114)\n",
      "Erik Ryhorchuk (118395)\n",
      "Fawaz Saleem (33206)\n",
      "Omar Salem (46322)\n",
      "Kiavash Samadi (15209)\n",
      "Arjan Sandhu (161615)\n",
      "Leann Santa Cruz (93732)\n",
      "Asia Schmok (28104)\n",
      "Corwin Shanner (196906)\n",
      "Mitchel Sharko (61316)\n",
      "Angus Shaw (209916)\n",
      "Betty Shea (74337)\n",
      "Jacky Sio (33190)\n",
      "Anastasiya Sokha (194151)\n",
      "Christopher Song (16476)\n",
      "Gautam Soni (14649)\n",
      "Simeon Stakic (116944)\n",
      "Tyler Steele (14767)\n",
      "Jie Su (144982)\n",
      "YUAN SUN (93265)\n",
      "Lirukshman Sundaralingam (109379)\n",
      "Serge Sych (111452)\n",
      "Aiden Synkova (14889)\n",
      "FIGALI TAHO (175442)\n",
      "Shushama Tahsin (24998)\n",
      "Derek Tam (208546)\n",
      "Jobina Tamminga (64559)\n",
      "Adrien Tang (17797)\n",
      "Andrea Tang (29294)\n",
      "Kyo Tang (139003)\n",
      "Tiffany Tang (33163)\n",
      "Kshitiz Tanwar (68741)\n",
      "Justin Tao (26292)\n",
      "Gorn Teptada (13051)\n",
      "David Thomas (18893)\n",
      "Angela Tian (34191)\n",
      "Jos¿ Torres Ju¿rez (228432)\n",
      "Brian Trieu (14785)\n",
      "Oscar Tu (196680)\n",
      "Shiv Vashisht (48961)\n",
      "Leqi Wan (1084)\n",
      "Francis Wang (33196)\n",
      "Jason Wang (153077)\n",
      "Jia Bin Wang (34244)\n",
      "John Wang (39938)\n",
      "Ren Wang (29302)\n",
      "Rui Wang (24833)\n",
      "Sari Wang (20977)\n",
      "Stella Wang (128053)\n",
      "Wumian Wang (149491)\n",
      "Yuyang Wei (15632)\n",
      "Yijia Wen (169311)\n",
      "Ella Wilson (32781)\n",
      "Ryan Wirth (110372)\n",
      "Michelle Wong (196439)\n",
      "Raymond Wong (73329)\n",
      "Stephanie Wong (14720)\n",
      "Trevin Wong (81)\n",
      "Andy Worth (3759)\n",
      "Ashley-Gail Wright (23233)\n",
      "TJ Wu (45912)\n",
      "Victor Wu (197100)\n",
      "Yiyun Xi (62656)\n",
      "Robin Xie (82)\n",
      "Kevin Xu (26546)\n",
      "Yuan Xu (15453)\n",
      "Sheena Yadav (33155)\n",
      "Rongzheng Yan (120757)\n",
      "Sam Yan (15675)\n",
      "Minghao Yang (163229)\n",
      "Xiaoan Yang (144954)\n",
      "Xinyue Yang (56891)\n",
      "Amy Yao (18715)\n",
      "Harry Yao (33242)\n",
      "Violet Ye (117282)\n",
      "Albert Yip (14731)\n",
      "James Yoo (161421)\n",
      "Ruixuan Yu (44948)\n",
      "Henry Zeng (15919)\n",
      "Alice Zhang (33268)\n",
      "Cindy Zhang (15571)\n",
      "David Zhang (195713)\n",
      "Fred Zhang (23256)\n",
      "Grace Zhang (33153)\n",
      "James Zhang (98347)\n",
      "John Zhang (15658)\n",
      "Shuaiqi Zhang (144997)\n",
      "Bruce Zhao (215503)\n",
      "Darming Zhao (33208)\n",
      "MengXin Zhao (14730)\n",
      "Cherry Zheng (111932)\n",
      "Jacky Zheng (111473)\n",
      "Lydia Zheng (23042)\n",
      "Zikang Zheng (152315)\n",
      "Julia Zhu (14869)\n",
      "Scoward Zhu (21643)\n",
      "Steven Zhu (33221)\n",
      "Tianyan Zhu (34138)\n",
      "Youcheng Zhu (144977)\n",
      "Kevin Zou (109246)\n",
      "Xiaoyu Zou (118382)\n",
      "Andrew Zulaybar (82256)\n",
      "Danielle Andriulaitis (97392)\n",
      "Bronwyn Baillie (65585)\n",
      "Naman Bansal (16442)\n",
      "Kajal Bhagat (38443)\n",
      "Qingyu Cai (1123)\n",
      "Jacky Chen (15068)\n",
      "Muyi Chen (46957)\n",
      "Naitong Chen (14818)\n",
      "Cici Cheng (2156)\n",
      "Lulu Ching (209934)\n",
      "Javier Cort¿s Orihuela (27204)\n",
      "Ke Dai (31012)\n",
      "Vicky Do (16266)\n",
      "Huaiwen Dong (26811)\n",
      "Daniel Du (34324)\n",
      "Ruiwen Fan (31096)\n",
      "Sarah Fedoroff (139214)\n",
      "Keer Feng (29821)\n",
      "XUMING FENG (243954)\n",
      "Zoe Fox (16529)\n",
      "Jianping Gao (16004)\n",
      "Mingyuan Gao (130990)\n",
      "Tevin Gill (16468)\n",
      "Xinhao Guo (82090)\n",
      "Brian Hong (15570)\n",
      "Din-Yuan Hsieh (193574)\n",
      "Sijia Hu (29868)\n",
      "April Huang (46082)\n",
      "Judy Huang (13740)\n",
      "Tavis Jamieson (120808)\n",
      "Arabella Jia (160283)\n",
      "Han Jiang (139331)\n",
      "Cathy Jiao (15072)\n",
      "Alice Kim (15001)\n",
      "Mark Kopani (16449)\n",
      "Jian Lan (85386)\n",
      "Ambre Ledoux (197782)\n",
      "Baichao Li (62762)\n",
      "Jerry Li (34265)\n",
      "Jiacheng Li (23444)\n",
      "Joyce Li (38185)\n",
      "Liangchen Li (23388)\n",
      "Melauria Li (23551)\n",
      "Qiwen Li (139293)\n",
      "Wuyang Li (15349)\n",
      "Xiaojie Li (43541)\n",
      "Yueyan Li (41959)\n",
      "Jewel Lin (192126)\n",
      "Yiying Lin (41606)\n",
      "Yuchen Lin (135785)\n",
      "Carol Liu (16427)\n",
      "Jiaoxue Liu (41440)\n",
      "Yushang Liu (161549)\n",
      "Yu-Hsiang Lo (14871)\n",
      "Kaiming LU (47349)\n",
      "Xuechun Lu (47880)\n",
      "Robert Lucy (205481)\n",
      "Eric Lusk-Jopson (44705)\n",
      "Yubin Lyu (16046)\n",
      "Hantao Mai (120677)\n",
      "Aya Makhambetova (16435)\n",
      "Adam Martens (64679)\n",
      "Si Miao (120618)\n",
      "Anelya Mynzhassarova (139292)\n",
      "Eva Ng (120676)\n",
      "Dilpreet Parmar (82018)\n",
      "Jared Pattison (16445)\n",
      "Jingle Qiu (117274)\n",
      "Matt Reid (209771)\n",
      "Kejin Ren (16441)\n",
      "Sarah Reny (168107)\n",
      "Ricardo Rivera Cardoso (15536)\n",
      "Yi Si (39180)\n",
      "Daniel Song (139303)\n",
      "Rachel Song (139306)\n",
      "Ziqi Su (46260)\n",
      "Lauren Tonello (163632)\n",
      "Belle Tong (161511)\n",
      "Leqi Wan (1084)\n",
      "Maggie Wan (34337)\n",
      "Dongkai Wang (128289)\n",
      "Hao Wang (3623)\n",
      "Weihong Wang (14683)\n",
      "Yi Wang (56983)\n",
      "Yijia Wen (169311)\n",
      "Chengsi Wu (217071)\n",
      "Qifang Wu (199336)\n",
      "yingying xia (206802)\n",
      "SIQIAO XIE (15123)\n",
      "Yiwen Xu (14715)\n",
      "Xinyi Yan (82752)\n",
      "Yuki Yang (26840)\n",
      "Chloe You (16451)\n",
      "Jenny Yu (191129)\n",
      "JIAPEI YU (128220)\n",
      "Anan Zhang (82091)\n",
      "Chao Zhang (14714)\n",
      "Daniel Zhang (110394)\n",
      "Haoran Zhang (45550)\n",
      "Lan Zhang (116846)\n",
      "Qingyue Zhang (21747)\n",
      "Zhexuan Zheng (15391)\n",
      "Zikang Zheng (152315)\n",
      "Weijia Zhong (14654)\n",
      "Chenliang Zhou (16469)\n",
      "Yury Zhuk (11874)\n",
      "Xiaoyu Zou (118382)\n",
      "Jero Abad (212262)\n",
      "Aishwarya Abhiram (17226)\n",
      "Emma Ackermann (10960)\n",
      "Mona Adibmoradi (3516)\n",
      "John Aguilar (154710)\n",
      "Elias Aguirre (103883)\n",
      "Su Young Ahn (73221)\n",
      "Asad Aizaz (39978)\n",
      "Reza Akhavan (4744)\n",
      "Hisham Al Hashmi (139172)\n",
      "Glaynel Alejo (120798)\n",
      "Aziz Alimov (39916)\n",
      "Rithvik Alluri (82270)\n",
      "Martin Aloise (35956)\n",
      "Neeku Amanat (13346)\n",
      "Kevin An (26683)\n",
      "Zike An (112837)\n",
      "Gareth Antle (149435)\n",
      "Amy Antonsen (39695)\n",
      "Eully Ao (13256)\n",
      "Leonardo Arreaza (125914)\n",
      "Ayman Azhar (13729)\n",
      "Fatum Bahamdun (13331)\n",
      "Gursaanj Bajaj (109240)\n",
      "Emily Ballon (101779)\n",
      "Mara Balvers (82897)\n",
      "Sahil Bansal (28458)\n",
      "Lexia Bao (27532)\n",
      "Seraph Bao (29187)\n",
      "Spandana Baruah (22389)\n",
      "Breyanne Bautista (25369)\n",
      "Melissa Bernstein (31511)\n",
      "Raunak Bhagat (128031)\n",
      "Simran Bhaidani (25000)\n",
      "Eric Bhang (111692)\n",
      "Harvir Bhattal (125894)\n",
      "Shirley Bi (105397)\n",
      "Maya Bird (99164)\n",
      "Lorenzo Bisceglia (123641)\n",
      "Luis Bolanos (15390)\n",
      "Nicole Bostan (10787)\n",
      "Brianne Boufford (123707)\n",
      "Josh Bowman (208551)\n",
      "Harman Brar (27342)\n",
      "Maya Brassard (13285)\n",
      "Cole Brauer (128166)\n",
      "Dylan Brown (73866)\n",
      "Katherine Buchanan (2859)\n",
      "Juan Camilo Burckhardt Acevedo (23054)\n",
      "Nathalie Buu (13058)\n",
      "David Cai (2355)\n",
      "Xuechun Cao (43278)\n",
      "Duncan Carlson (2962)\n",
      "Julia Chai (14444)\n",
      "Brendan Chan (117133)\n",
      "Diora Chan (3035)\n",
      "Joshua Chan (4380)\n",
      "Sara Chan (33797)\n",
      "Vita Chan (22683)\n",
      "Austin Chang (125898)\n",
      "Michelle Chang (125939)\n",
      "Philippe Chapdelaine (14672)\n",
      "Calvin Chen (163328)\n",
      "Charlotte Chen (117166)\n",
      "Chris Chen (33506)\n",
      "David Chen (11595)\n",
      "Elaine Chen (23535)\n",
      "Fiona Chen (2915)\n",
      "Jacques Chen (29498)\n",
      "Jihan Chen (27388)\n",
      "Liheng Chen (11662)\n",
      "Lily Chen (15386)\n",
      "Linkun Chen (33538)\n",
      "Rebecca Chen (44777)\n",
      "Roy Chen (15292)\n",
      "Shalen Chen (11762)\n",
      "Tianzong Chen (2516)\n",
      "Victor Chen (15179)\n",
      "Judy Cheng (139232)\n",
      "Maye Cheng (189522)\n",
      "Nicole Cheng (13347)\n",
      "Janelle Cheung (21762)\n",
      "Jeffrey Chew (117173)\n",
      "Hetty Chiang (39887)\n",
      "Justin Chiasson (25186)\n",
      "Jodi Chien (47628)\n",
      "Tonya CHIU (2660)\n",
      "Erica Choi (32576)\n",
      "Esther Choi (13373)\n",
      "Jae Sam Choi (212814)\n",
      "Jasmine Choi (13179)\n",
      "Suet Ching Choi (10764)\n",
      "Min Choo (73276)\n",
      "Gurpreet Chopra (117142)\n",
      "Chanelle Chow (13466)\n",
      "Joanne Chu (35465)\n",
      "Yuhsin Chu (97357)\n",
      "Harry Chuang (62645)\n",
      "Serena Chuang (117190)\n",
      "Marina Chun (50161)\n",
      "Chantal Chung (31455)\n",
      "Samantha Cibere (50062)\n",
      "Jaimy Coates (13380)\n",
      "Raven Condol (27299)\n",
      "Johann Cooper (34108)\n",
      "Mikaela Correa (33018)\n",
      "Andree Coschizza (88880)\n",
      "Liam Coyle (15176)\n",
      "Cassandra Cui (117193)\n",
      "Yuhan Cui (2770)\n",
      "Michael Cummings (117137)\n",
      "Ricky Curry (71288)\n",
      "Sherwyn D'Souza (15421)\n",
      "Kyle Da Silva (25964)\n",
      "Angela Dai (104025)\n",
      "Bronwyn Damm (73323)\n",
      "Kathryn Darby (125950)\n",
      "Mary Datan (159303)\n",
      "Sarah Day (20322)\n",
      "Joshua De Guzman (208490)\n",
      "Matthew De Rose (171603)\n",
      "Kara Deane (28544)\n",
      "Gurvir Dehal (15253)\n",
      "Heather DeHaven (15392)\n",
      "Jolene Deng (73291)\n",
      "Yue Deng (111471)\n",
      "Nima Derakhshan (43361)\n",
      "Angelli Dimatulac (20640)\n",
      "Fiel Dimayacyac (117118)\n",
      "Julian Ding (192225)\n",
      "Andrei Dobre (24309)\n",
      "Cassidy Donaldson (15256)\n",
      "JERRY DONG (33522)\n",
      "Rebecca Dos Remedios (208528)\n",
      "Kashish Doshi (76910)\n",
      "Morgan Dowling (2940)\n",
      "Shijunyan Du (4501)\n",
      "Lian Duan (15224)\n",
      "Christian Due (34814)\n",
      "Artun Duman (96248)\n",
      "Krishna Dwarka (13278)\n",
      "Mitchell Elholm (4306)\n",
      "Panda Elliott (13767)\n",
      "Kevin Elward (117158)\n",
      "Luke Enns (13308)\n",
      "Chengzhi Fan (53986)\n",
      "Erica Fan (125942)\n",
      "Long Yan Emily Fan (63632)\n",
      "Shuxian Fan (49359)\n",
      "Vera Fan (4705)\n",
      "Daniel Fang (111481)\n",
      "Farid Faraji (14721)\n",
      "Roberto Fedrigo (138022)\n",
      "Homen Feng (103824)\n",
      "Qianqian Feng (3737)\n",
      "Samantha Feng (208544)\n",
      "Catherine Fletcher (13433)\n",
      "Nathan Fong (2700)\n",
      "Olivia Foster (111720)\n",
      "Aisling Fothergill (14403)\n",
      "John Paul Francisco (25465)\n",
      "Gregory Freeman (144974)\n",
      "Denisse Freitas Rivas (16618)\n",
      "Cody Gagnon (15203)\n",
      "Kira Gallant (39820)\n",
      "Chuntong Gao (21980)\n",
      "Yilun GAO (144951)\n",
      "Parth Garg (153181)\n",
      "Amy George (212335)\n",
      "Tara Gholamian (88849)\n",
      "Farima Ghorbani (120792)\n",
      "Jessie Giddings (206525)\n",
      "Gura Gill (125960)\n",
      "Jeremy Gill (38121)\n",
      "Emily Gong (192235)\n",
      "Judy Gong (2954)\n",
      "Michael Gong (34693)\n",
      "Samuel Gong (87658)\n",
      "Ruiyu Gou (98406)\n",
      "Himanshu Goyal (31019)\n",
      "Joshua Green (44618)\n",
      "Michelle Gu (139267)\n",
      "Emma Gunn (15231)\n",
      "Hongxi Guo (32587)\n",
      "Katie Gyte (82261)\n",
      "Andrew Ha (39734)\n",
      "Jason Hall (73872)\n",
      "Anna Han (33987)\n",
      "Akshay Handa (42260)\n",
      "Chen HANG (144427)\n",
      "Alessandro Hardjono (123688)\n",
      "Aiden Harrington (73333)\n",
      "Carol He (81959)\n",
      "Jiangning He (1967)\n",
      "Sharon He (4404)\n",
      "Yizhuo He (82167)\n",
      "Maureen Hii (117205)\n",
      "Elsa Ho (44842)\n",
      "Richard Ho (151520)\n",
      "Sharmain Ho (40051)\n",
      "Carson Hoang (135828)\n",
      "Emily Hon (212301)\n",
      "Calvin Hong (4408)\n",
      "Chongqing Hou (141010)\n",
      "Chris Hou (13212)\n",
      "Emily Hsiao (47154)\n",
      "Han Hsiao (38026)\n",
      "Jeni Hsing (117125)\n",
      "Wu Jih Hsu (30085)\n",
      "Chenming Hu (95041)\n",
      "Hugo Hu (162220)\n",
      "Justin Hu (73312)\n",
      "Sylvia Hu (13003)\n",
      "Albert Huang (125968)\n",
      "Andrew Huang (4586)\n",
      "David Huang (33033)\n",
      "Eileen Huang (2890)\n",
      "Jacqueline Huang (2790)\n",
      "KuanMin Huang (25352)\n",
      "Ruolan Huang (2866)\n",
      "Samantha Huang (4374)\n",
      "Jessica Huh (148670)\n",
      "Christopher Hui (86798)\n",
      "Jeremy Hui (117114)\n",
      "JJ Hum (189526)\n",
      "Linus Hung (18027)\n",
      "Mark Hung (24751)\n",
      "Wesley Hunt (27509)\n",
      "Hebah Hussaina (46397)\n",
      "Julia Hwangbo (17801)\n",
      "Claire Iacono (156738)\n",
      "Gabriel Ieong (73295)\n",
      "Jocelyn Ip (2742)\n",
      "Daniel Israel (84655)\n",
      "Amir Jafarvand (28135)\n",
      "Eric Jang (128284)\n",
      "Yuree Jang (212545)\n",
      "Sophie Jansen (130956)\n",
      "Elizabeth Jeffs (2970)\n",
      "Kaylee Jeong (61512)\n",
      "Ken Jeong (33962)\n",
      "William Ji (33876)\n",
      "Emily Jia (39040)\n",
      "Carli Jones (13470)\n",
      "Tigris Joseph (22957)\n",
      "Li Ju (62755)\n",
      "Lisa Jung (82878)\n",
      "Michelle Jung (22015)\n",
      "Stephen Juwono (19362)\n",
      "Ali Ka (4211)\n",
      "Naoreen Kabir (1030)\n",
      "Pavneet Kalsi (30120)\n",
      "Kasra Kamal (40141)\n",
      "Nick Kamal (35484)\n",
      "Amy Kang (125954)\n",
      "Emma Kang (13171)\n",
      "Xinyu KANG (28800)\n",
      "Josie Kanu (13233)\n",
      "Sunny Kao (117124)\n",
      "Can Karacahisarli (25344)\n",
      "Emma Karlsen (10846)\n",
      "Napat Karnsakultorn (27573)\n",
      "Anna Kaveney (143879)\n",
      "Doru Kesriyeli (25292)\n",
      "Naomi Khan (25402)\n",
      "Shabab Khan (34291)\n",
      "Dhruv Khanna (47599)\n",
      "Amir Khorrami (111598)\n",
      "May Kikuchi (203353)\n",
      "Theresa Marie Kikuchi (25219)\n",
      "David Kim Kim (14687)\n",
      "Jason Kim (168518)\n",
      "Jihyun Kim (13474)\n",
      "Jonathan Kim (4412)\n",
      "Jubin Kim (198436)\n",
      "Seeone Kim (85418)\n",
      "Tae Hyung Kim (10794)\n",
      "Peter Ko (108134)\n",
      "Harkunwar Singh Kochar (6820)\n",
      "Ryuta Kojima (2999)\n",
      "Jessica Kong (25418)\n",
      "Sara Kowalski (11739)\n",
      "Austin Kvaale (30364)\n",
      "Rhett Lai (139195)\n",
      "Katherine Lam (125955)\n",
      "Deenah Laron (14528)\n",
      "Ranky Lau (149525)\n",
      "Wing Yeung Shar Lau (117136)\n",
      "Christian Laurence (15322)\n",
      "Lauren Lavoie (1151)\n",
      "Anson Law (208511)\n",
      "Daryna Lebed (44308)\n",
      "Chiara-lyse Lee (10842)\n",
      "Daniel Lee (111547)\n",
      "Harrison Lee (4155)\n",
      "Karen LEE (2749)\n",
      "Kiah Lee (23543)\n",
      "Kiaunna Lee (2974)\n",
      "Marshall Lee (152307)\n",
      "Peter Lee (73283)\n",
      "Sein Lee (33333)\n",
      "George Lei (44710)\n",
      "Tristan Lei (73339)\n",
      "Andrew Leong (32570)\n",
      "Madeleine Leroux (50572)\n",
      "Valerie Leung (57942)\n",
      "Ang Li (149528)\n",
      "Carmen Li (46227)\n",
      "Eve Li (31437)\n",
      "Helin Li (2758)\n",
      "Johnny Li (161093)\n",
      "Kobe Li (105162)\n",
      "Pei Sheng Li (83158)\n",
      "Ricky Li (135802)\n",
      "Sarah Li (10153)\n",
      "Xuxu Li (42145)\n",
      "Andy Liang (15366)\n",
      "Jennifer Liang (13020)\n",
      "Zipeng Liang (108850)\n",
      "Tina Liao (208497)\n",
      "Celine Liew (62217)\n",
      "Cindy Lim (47187)\n",
      "Hyunuk Lim (39244)\n",
      "Benny Lin (10798)\n",
      "Howard Lin (32693)\n",
      "Jordan Lin (112841)\n",
      "Mandy Lin (2874)\n",
      "Xindong Lin (13983)\n",
      "Daniel Liu (27773)\n",
      "Daniel Liu (117279)\n",
      "David Liu (62705)\n",
      "Deyu Liu (32147)\n",
      "Emma Liu (138967)\n",
      "Ever Liu (33358)\n",
      "Kehong Liu (42026)\n",
      "Michael Liu (73308)\n",
      "Sara Liu (13910)\n",
      "Vandy Liu (42071)\n",
      "YANG LIU (99482)\n",
      "Christine Lo (24764)\n",
      "Ivan Lo (13449)\n",
      "James Lo (117159)\n",
      "Gustavo Loachamin Ordo¿ez (1166)\n",
      "Sarah Lockwood (29754)\n",
      "Zhenting Long (86097)\n",
      "Audrey Lu (98445)\n",
      "Jie Lu (41832)\n",
      "Jimmy Lu (73327)\n",
      "Jonah Lu (117149)\n",
      "Lillian Lu (3039)\n",
      "Michelle Lu (117202)\n",
      "Xuechun Lu (47880)\n",
      "Guoyang Luan (76764)\n",
      "Ryan Lum (28157)\n",
      "Daryus Lung (151519)\n",
      "Joshua Luong (151516)\n",
      "Sadie Lye (83227)\n",
      "Graham Lynn (24345)\n",
      "Danielle Ma (24256)\n",
      "Josh Ma (27531)\n",
      "Rachel Ma (2814)\n",
      "Sam Ma (15341)\n",
      "Steven Ma (24230)\n",
      "Mahan Maazi (11629)\n",
      "Lila Mackenzie (73350)\n",
      "Tina Madani Kia (10797)\n",
      "Ian Mah (73307)\n",
      "Rachit Malik (73303)\n",
      "Tia Malloff (117168)\n",
      "Preet Mangat (105169)\n",
      "Yi Ang Mao (31097)\n",
      "Samantha Mar (208610)\n",
      "Jacques Marais (48319)\n",
      "Kit Martens (208713)\n",
      "Valentina Mata Mata (2677)\n",
      "Joanne Mathew (13165)\n",
      "Reginald McDonald (123382)\n",
      "Chris McKinnon (311569)\n",
      "Cameryn Meloche (11879)\n",
      "Lily Men (2997)\n",
      "Cass Menchions (5762)\n",
      "Haotian Meng (83387)\n",
      "Nikita Menon (14445)\n",
      "Julian Mentasti (128157)\n",
      "Cris Mihailescu (4099)\n",
      "Anthony Miyagi (13489)\n",
      "Morgan Mo (73278)\n",
      "Robert Mo (14726)\n",
      "Aliya Mohamed (131741)\n",
      "Musa Mohannad (19233)\n",
      "Haseenah Molumo (12665)\n",
      "Taylor Morrison (13168)\n",
      "Nikki Motevaselolhagh (73300)\n",
      "Quintin Muncaster (38479)\n",
      "Arielle Murad (15191)\n",
      "Kellin Murphy (82988)\n",
      "Shivani Mysuria (18197)\n",
      "Shreyas Naik (73351)\n",
      "Emma Nakamoto (13024)\n",
      "Taylor Navi-Lacasse (26632)\n",
      "Elli Newman (13223)\n",
      "Sally Newton-Mason (13766)\n",
      "Jacob Ng (19819)\n",
      "Jo Rene Ng (121515)\n",
      "Kipling Ng (128080)\n",
      "Philip Ng (34649)\n",
      "Sarah Ng (211470)\n",
      "Aaron Ngu Ngu (30135)\n",
      "Thai Nguyen Dinh (10230)\n",
      "David Nguyen (144970)\n",
      "Denise Nguyen (111696)\n",
      "Kelly Nguyen (10844)\n",
      "Mimi Nguyen (60505)\n",
      "Charlene Nicer (32713)\n",
      "Jacky Jiahao Niu (49295)\n",
      "Christina Oh (27823)\n",
      "Edmund Oh (13033)\n",
      "Julia Oh (4719)\n",
      "Gillian Okura (33416)\n",
      "Farah Omar (34839)\n",
      "Shane Ong (117208)\n",
      "Tess Osborne (45480)\n",
      "Tiffany Ou (25521)\n",
      "Kass Ouitayakul (149514)\n",
      "Zihui Ouyang (26024)\n",
      "Tugce Ozaydin (13995)\n",
      "Janice Pang (111716)\n",
      "Al Parillon (4165)\n",
      "Albert Park (52396)\n",
      "Sujin Park (40188)\n",
      "Tom Park (40093)\n",
      "Jasmine Parmar (13423)\n",
      "Brett Pasula (14488)\n",
      "Rutuja Pattanshetti (13231)\n",
      "Theodore  Pellegrin (139184)\n",
      "Nathan Perillat (112860)\n",
      "Brooks Perkins-Jechow (28844)\n",
      "Nicholas Peterson (81207)\n",
      "Lucas Philipp (125925)\n",
      "Hannah Phua (2991)\n",
      "Mark Pitblado (42000)\n",
      "Umut Polat (49488)\n",
      "Anthony Pookpun (208589)\n",
      "Jane Procyshyn (21713)\n",
      "Yi Xuan Qi (128230)\n",
      "YIFENG QIN (141008)\n",
      "Colton Quan (15368)\n",
      "Parisa Rahmatian (18038)\n",
      "Ramon Rakow (153085)\n",
      "Parker Ram (38057)\n",
      "Andre Ramkairsingh (128200)\n",
      "Kunal Ranger (4197)\n",
      "Aditya Rao (30143)\n",
      "Oliver Rechlin (212554)\n",
      "Sam Riddle (47314)\n",
      "Javier Rivera (13383)\n",
      "Laura Rodgers (16538)\n",
      "Jake Rushton (68694)\n",
      "Daniel Ryu (34055)\n",
      "Jaiten Saini (125896)\n",
      "Omar Salem (46322)\n",
      "Sam Salmasi (10781)\n",
      "Kiavash Samadi (15209)\n",
      "Alexandra San Pedro (2870)\n",
      "Charu Sankaran (15636)\n",
      "Leann Santa Cruz (93732)\n",
      "Rahnuma Sara (117169)\n",
      "Javier Sarria Bastidas (159299)\n",
      "Kara Schultz (117146)\n",
      "Sheetal Shajan (48184)\n",
      "Hannah Shariati (117183)\n",
      "Hallee Shearer (25365)\n",
      "Ben Shen (27307)\n",
      "James Shen (133384)\n",
      "Xiaodi Shen (83252)\n",
      "Joshua Shepherd (10903)\n",
      "Doris Shi (29885)\n",
      "Lanfang Shi (2862)\n",
      "Roy Shi (163148)\n",
      "Zhuangzhuang Shi (53132)\n",
      "Kathryn Simone (30419)\n",
      "Barry Sin (128204)\n",
      "Alam Singh (15418)\n",
      "Andy Siu (23260)\n",
      "Caitlyn Siu (10805)\n",
      "Felix Siu (73318)\n",
      "Nick Siu (73320)\n",
      "Seiji Smith (139000)\n",
      "Christine Soares (2899)\n",
      "Hossein Soltanian (10836)\n",
      "Sammy Song (73864)\n",
      "Sarah Song (82328)\n",
      "Edward Ssebuliba (29474)\n",
      "Maria Stamenkovic (117180)\n",
      "Charlotte Stewart (212355)\n",
      "Megan Stewart (23490)\n",
      "Edison Su (212815)\n",
      "Chang Sun (42742)\n",
      "Sarah Sun (5630)\n",
      "Sharon Sun (88838)\n",
      "Yiheng Sun (13984)\n",
      "Lirukshman Sundaralingam (109379)\n",
      "Gabrielle Sunderland (120779)\n",
      "Andrew Sung (73282)\n",
      "Grant Sutton (14572)\n",
      "Fiza Syal (10769)\n",
      "Theresa Tai (10774)\n",
      "Jordan Tam (42204)\n",
      "Jerrett Tan (208540)\n",
      "Teresa Tan (25087)\n",
      "Weiyoung Tan (68702)\n",
      "Rene Tandun (10820)\n",
      "Ernest Tang (10776)\n",
      "Joice Tang (24451)\n",
      "Kyo Tang (139003)\n",
      "Matthew Tang (15264)\n",
      "Kshitiz Tanwar (68741)\n",
      "Siqi Tao (139230)\n",
      "Towela Tembo (17711)\n",
      "Marcus Thian (152433)\n",
      "Meg Thibodeau (132630)\n",
      "Angela Tian (34191)\n",
      "Yuxin Tian (14052)\n",
      "Josh Tindall (33706)\n",
      "Michael Ton (67761)\n",
      "Andrew Tong (18592)\n",
      "Nawaratt Tonrungroj (47097)\n",
      "Manish Toofany (11685)\n",
      "Mangat Toor (46575)\n",
      "Khanh Linh Tran (119509)\n",
      "Eric Tsai (73279)\n",
      "Christopher Tse (14484)\n",
      "Ethan Tse (10833)\n",
      "Sincere Tse (28538)\n",
      "Wayne Tse (11708)\n",
      "Shenia Tung (25404)\n",
      "Prakruti Uday (34135)\n",
      "Gabrielle Vaillancourt Ehling (128093)\n",
      "Miguel Valarao (192175)\n",
      "Gerrit Van Esch (37290)\n",
      "Lasya Vankayala (105170)\n",
      "Natalie Varga (13111)\n",
      "Mieke Vink (28360)\n",
      "Petal Vitis (60469)\n",
      "Oskar von Wahl (13093)\n",
      "Katie Wai (44306)\n",
      "Lauren Walgren (128073)\n",
      "Ben Walker (43934)\n",
      "Adam Wan (45581)\n",
      "Leqi Wan (1084)\n",
      "Mandy Wan (198330)\n",
      "Colin Wang (45566)\n",
      "Edward Wang (73859)\n",
      "Jeffrey Wang (14361)\n",
      "Mars Wang (73280)\n",
      "Miru Wang (13885)\n",
      "Ruihao Wang (161572)\n",
      "Siqi Wang (14293)\n",
      "Tiana Wang (10806)\n",
      "Tracy Wang (27902)\n",
      "Yuheng Wang (117290)\n",
      "Alan Ward (9731)\n",
      "Yilin Wei (2373)\n",
      "Caleb Weinhagen (13042)\n",
      "Annika Wevers (128113)\n",
      "Alannah Wilson (30155)\n",
      "Gabe Wilson (13218)\n",
      "Nik Wilson (139246)\n",
      "Helena Winata (27372)\n",
      "Alvin Wong (208481)\n",
      "Daniel Wong (117181)\n",
      "Eunice Wong (13397)\n",
      "Jennifer Wong (25351)\n",
      "Jonathan Wong (203823)\n",
      "Krystal Wong (73344)\n",
      "Nolan Wong (25340)\n",
      "Raymond Wong (73329)\n",
      "Andy Worth (3759)\n",
      "Benjamin Wu (54001)\n",
      "Harin Wu (88840)\n",
      "Heng Wu (13002)\n",
      "Jessica Wu (15708)\n",
      "Jichun Wu (15333)\n",
      "June Wu (102812)\n",
      "Tina Wu (73337)\n",
      "Tony Wu (49944)\n",
      "William Wu (4388)\n",
      "Yang Xia (197460)\n",
      "Michael Xian (15373)\n",
      "Yifei Xiao (117271)\n",
      "SIQIAO XIE (15123)\n",
      "Cynthia Xing (117278)\n",
      "YuXuan Xiong (13306)\n",
      "Denise Xu (116803)\n",
      "George Xu (4386)\n",
      "Joy Xu (143854)\n",
      "Kevin Xu (26546)\n",
      "Cathy Yan (29673)\n",
      "Nathan Yan (212326)\n",
      "Sam Yan (15675)\n",
      "Zexu Yan (142618)\n",
      "Daniela Yanez Ortuno (139249)\n",
      "Lily Yang (17290)\n",
      "Sunnie Yang (27254)\n",
      "Tina Yang (2885)\n",
      "Xiaoan Yang (144954)\n",
      "Gary Yao (215165)\n",
      "Phoebe Yap (128091)\n",
      "Tim Yaroshuk (208499)\n",
      "Enoch Yau (125910)\n",
      "Cathy Ye (112859)\n",
      "Manaswi Yerrabattini (26662)\n",
      "Vanessa Yeung (3009)\n",
      "Owen Yin (34832)\n",
      "Kang Mu Yoo (17256)\n",
      "Sam Young (44396)\n",
      "Angela Yu (3028)\n",
      "Grace Yu (2813)\n",
      "Ken Yu (28590)\n",
      "Megan Yu (13038)\n",
      "Timothy Yu (26692)\n",
      "Jack Yuan (47096)\n",
      "Jackson Yuan (15249)\n",
      "Michelle Yuan (11548)\n",
      "Trista Yuan (2711)\n",
      "Marty Yue (71458)\n",
      "Sandy Yuen (3228)\n",
      "Wesley Yuen (23909)\n",
      "Amy Yung (19514)\n",
      "Aya Zakaria (208567)\n",
      "Irina Zemlyankina (46381)\n",
      "Amber Zhang (46552)\n",
      "Daniel Zhang (110394)\n",
      "Fred Zhang (23256)\n",
      "Jenny Zhang (113293)\n",
      "Jiahe Zhang (45317)\n",
      "Leo Zhang (10155)\n",
      "Manni Zhang (61452)\n",
      "Wenxin Zhang (44757)\n",
      "Wilson Zhang (4392)\n",
      "Wucheng Zhang (13992)\n",
      "Yijia Zhang (4206)\n",
      "Yuze Zhang (139189)\n",
      "Zhipian Zhang (4092)\n",
      "Bruce Zhao (215503)\n",
      "Jodie Zhao (2878)\n",
      "Steven Zhao (38145)\n",
      "Justin Zheng (98469)\n",
      "Lydia Zheng (23042)\n",
      "Xinxian Zheng (158650)\n",
      "Zikang Zheng (152315)\n",
      "Anna Zhitnitsky (125920)\n",
      "Alice Zhou (21256)\n",
      "Bill Zhou (73874)\n",
      "Kevin Zhou (13418)\n",
      "Michael Zhou (73313)\n",
      "Rebecca ZHOU (2701)\n",
      "Sylvia Zhou (26512)\n",
      "Tiantai Zhou (2152)\n",
      "Tony Zhou (125947)\n",
      "LIANGYU ZHU (204724)\n",
      "Peiyuan Zhu (14786)\n",
      "Youcheng Zhu (144977)\n",
      "Ziqing Zhu (23850)\n",
      "Ziqing Zhu (166870)\n",
      "Xiaoyu Zou (118382)\n",
      "Andrew Zulaybar (82256)\n",
      "Chaeree An (45022)\n",
      "Zike An (112837)\n",
      "Alexandre Avreline (144981)\n",
      "Lu Bai (11637)\n",
      "Kajal Bhagat (38443)\n",
      "Shuanglin Cao (27250)\n",
      "Xuechun Cao (43278)\n",
      "Ian Chan (33734)\n",
      "Conway Chen (98374)\n",
      "Jacky Chen (15068)\n",
      "Linkun Chen (33538)\n",
      "Naitong Chen (14818)\n",
      "Wei Chen (14746)\n",
      "Zikun Chen (120627)\n",
      "Jeremy Chiu (44073)\n",
      "Brian Choi (139284)\n",
      "Brendan Cuddihy (192345)\n",
      "Tong Cui (117292)\n",
      "Ben Daly-Grafstein (14637)\n",
      "Henry Deng (120695)\n",
      "Alisa Dmitrieva (24796)\n",
      "Daniel Du (34324)\n",
      "Aman Faruqui (82838)\n",
      "Fan Feng (163329)\n",
      "Viral Galaiya (184549)\n",
      "Jiuning Gao (83150)\n",
      "Tevin Gill (16468)\n",
      "Josianne Haag (13450)\n",
      "Elijah Ho (139194)\n",
      "Sahand Hosseini (82715)\n",
      "Chenming Hu (95041)\n",
      "Sylvia Hu (13003)\n",
      "Hao Huang (45487)\n",
      "Mabel Huang (30377)\n",
      "Yuxiang Huang (31060)\n",
      "Arabella Jia (160283)\n",
      "Jayde Jiang (117242)\n",
      "Yifan Jiang (82865)\n",
      "James Johnson (191166)\n",
      "Linky Kong (56930)\n",
      "Patrick Kong (31053)\n",
      "Kristo Krugger (139302)\n",
      "Darren Ku (15312)\n",
      "Austin Kwok (14925)\n",
      "Sunny Kwon (52112)\n",
      "Joseph Lachowicz (120777)\n",
      "Ada Lai (61360)\n",
      "Vincent Lam (138094)\n",
      "Wesley Lam (14656)\n",
      "Danny Lee (33250)\n",
      "Hyun Woo Lee (15017)\n",
      "John Lee (138986)\n",
      "Michelle Lee (13141)\n",
      "Seren Lee (42304)\n",
      "Jerry Li (34265)\n",
      "Jiacheng Li (23444)\n",
      "Jun Li (171829)\n",
      "Philip Li (174017)\n",
      "Songyang Li (34750)\n",
      "Xiang Li (192130)\n",
      "Xiaojia Li (105175)\n",
      "Yuchen Lin (135785)\n",
      "Colen Liu (118359)\n",
      "Jiaoxue Liu (41440)\n",
      "Ruoxing Liu (21765)\n",
      "Yuqi Liu (128022)\n",
      "Yuru Liu (15374)\n",
      "Yushang Liu (161549)\n",
      "Bryan Lo (83259)\n",
      "Jinhao Lu (64655)\n",
      "Wentao Lu (161968)\n",
      "Qiyuan Luo (33548)\n",
      "Marco Ma (41176)\n",
      "Lila Mackenzie (73350)\n",
      "Ostap Manastyrski (45896)\n",
      "Chloe Mao (34258)\n",
      "Hayden McTavish (73345)\n",
      "Jae Millar (32150)\n",
      "Conor Morrison (163331)\n",
      "Rachid Mounla (48468)\n",
      "Shirley Mu (44464)\n",
      "Angela Ng (40172)\n",
      "Eva Ng (120676)\n",
      "Michelle Ng (103947)\n",
      "Martha Ni (44935)\n",
      "Lykke Oestbom (209860)\n",
      "Zihui Ouyang (26024)\n",
      "Shiqi Pan (126111)\n",
      "Ken Pang (62795)\n",
      "Lulu Pei (33417)\n",
      "Nicola Popper (13786)\n",
      "Shuoxuan Qian (17028)\n",
      "Kejin Ren (16441)\n",
      "Shahriar Shayesteh (31471)\n",
      "Lin Shi (111431)\n",
      "Yi Si (39180)\n",
      "Kristy Siu (15080)\n",
      "Daniel Song (139303)\n",
      "Rachel Song (139306)\n",
      "Chang Sun (42742)\n",
      "Jessica Sun (25138)\n",
      "Yingjun Sun (82884)\n",
      "Gabrielle Sunderland (120779)\n",
      "Boyi Tang (33025)\n",
      "Berenice Teo (209939)\n",
      "Joseph Thomas (30027)\n",
      "Cory To (149437)\n",
      "Claudine Tu (64643)\n",
      "Onur Tuna (34336)\n",
      "Shenia Tung (25404)\n",
      "Slava Uryumtsev (41116)\n",
      "Gurinder Walia (120704)\n",
      "Leqi Wan (1084)\n",
      "Angie Wang (41890)\n",
      "Dongkai Wang (128289)\n",
      "Hao Wang (3623)\n",
      "Nick Wang (16101)\n",
      "Ren Wang (29302)\n",
      "Tiger Wang (134667)\n",
      "Xiaoce Wang (31050)\n",
      "Zitong Wang (149431)\n",
      "Liuhua Wu (149516)\n",
      "Ziwei Wu (144950)\n",
      "Tian Xie (176479)\n",
      "Yiwen Xu (14715)\n",
      "Rongzheng Yan (120757)\n",
      "Alistair Yee (15686)\n",
      "Weijia Yin (90920)\n",
      "Steve Yoon (66263)\n",
      "Chloe You (16451)\n",
      "Wongelawit Zewde (193228)\n",
      "Denghuang Zhan (39834)\n",
      "Jenny Zhang (113293)\n",
      "Manni Zhang (61452)\n",
      "Wenxin Zhang (44757)\n",
      "Zhexuan Zheng (15391)\n",
      "Zikang Zheng (152315)\n",
      "CHEN ZHU (210040)\n",
      "Dennis Zhu (27491)\n",
      "Yisheng Zhu (48558)\n",
      "Yury Zhuk (11874)\n",
      "Xiaoyu Zou (118382)\n",
      "Andrew Zulaybar (82256)\n"
     ]
    }
   ],
   "source": [
    "all_users = []\n",
    "for cid in course_ids:\n",
    "    course = canvas.get_course(cid)\n",
    "    users = course.get_users(enrollment_type = ['student'])\n",
    "    for i in users:\n",
    "        all_users.append(i.short_name);\n",
    "        print (i)\n",
    "       \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[<PaginatedList of type User>, <PaginatedList of type User>, <PaginatedList of type User>, <PaginatedList of type User>, <PaginatedList of type User>, <PaginatedList of type User>]\n"
     ]
    }
   ],
   "source": [
    "print(all_users)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Farshid Agharebparast (185967)\n",
      "Kunal Aildasani (15111)\n",
      "Gagan Bhatia (36937)\n",
      "Kofi Buahin (48413)\n",
      "Cindy Cen (82974)\n",
      "Farbod Chamanian (150707)\n",
      "Lily Chen (15386)\n",
      "Tianzong Chen (2516)\n",
      "Erica Choi (32576)\n",
      "Abigail Climacosa (15854)\n",
      "Erica Commons (118474)\n",
      "Tasha Coote (197947)\n",
      "Brooke Dai (91607)\n",
      "Mary Datan (159303)\n",
      "Zi Rui Ding (91745)\n",
      "Homen Feng (103824)\n",
      "Jorge Flores (148295)\n",
      "John Paul Francisco (25465)\n",
      "Arwa Gazzaz (86134)\n",
      "Alexandra Gil (24988)\n",
      "Ao Lin Gong (39130)\n",
      "Michelle Gu (139267)\n",
      "Nakul Gupta (222692)\n",
      "Shubham Gupta (43103)\n",
      "Dhiraj Hariramani (84839)\n",
      "Emily Hon (212301)\n",
      "Gina Hong (25249)\n",
      "Mery Hu Zhao (39951)\n",
      "Julie Huang (15990)\n",
      "Jessica Huh (148670)\n",
      "Nicole Huynh (12473)\n",
      "JungWook Jang (152730)\n",
      "Elham E Khoda (15624)\n",
      "Jiwon Kim (63487)\n",
      "Millenia Kitikul (50754)\n",
      "Peter Ko (108134)\n",
      "Kristo Krugger (139302)\n",
      "Alan Lau (21594)\n",
      "Harrison Lee (4155)\n",
      "Sein Lee (33333)\n",
      "Tony Lee (362123)\n",
      "Winnie LI (34986)\n",
      "Luanna Lin (23995)\n",
      "Andrew Liu (4190)\n",
      "Daniel Liu (117279)\n",
      "Fiana Liu (104016)\n",
      "Jerry Liu (42040)\n",
      "Xinyu Liu (59468)\n",
      "Dingfei Lu (2353)\n",
      "EMMA LU (29689)\n",
      "KEVIN LUZONG (87049)\n",
      "Michelle Ma (114528)\n",
      "Nils Maetzel (18945)\n",
      "Dhruv Mahajan (46719)\n",
      "Tarang Mahapatra (63629)\n",
      "Aliya Mohamed (131741)\n",
      "Eduardo Muntaner Garcia (57936)\n",
      "Munkhtur Myagmar (76950)\n",
      "Shivani Mysuria (18197)\n",
      "Aaron Ngu Ngu (30135)\n",
      "Thai Nguyen Dinh (10230)\n",
      "Michael Oliver (17811)\n",
      "David Park (73904)\n",
      "Ju Hee Park (12463)\n",
      "Yi Xuan Qi (128230)\n",
      "YIFENG QIN (141008)\n",
      "Jonathan Quintanar (357098)\n",
      "Mesbah Rafin (251657)\n",
      "Daniel Ryu (34055)\n",
      "Javier Sarria Bastidas (159299)\n",
      "James Shen (133384)\n",
      "Roy Shi (163148)\n",
      "Hardik Singhi (109239)\n",
      "Yenong Sun (28862)\n",
      "Zhaoying Sun (17596)\n",
      "Surohit Tandon (47904)\n",
      "Matthew Tang (15264)\n",
      "Towela Tembo (17711)\n",
      "Craig Thompson (262978)\n",
      "Grayson Tilstra (362297)\n",
      "William Ting (192928)\n",
      "Lauren Tonello (163632)\n",
      "Shenia Tung (25404)\n",
      "Otakar Valek (362132)\n",
      "Patricia Varao Sousa (60563)\n",
      "Karan Vasdev (73684)\n",
      "Miriam Wagner Valladolid (96282)\n",
      "Leqi Wan (1084)\n",
      "Edward Wang (73859)\n",
      "Estella Wang (152322)\n",
      "Shuai Wang (218007)\n",
      "Stella Wang (128053)\n",
      "Zi Wang (14855)\n",
      "Julie Wei (63678)\n",
      "Xindi Wei (12574)\n",
      "Yilin Wei (2373)\n",
      "Benjamin Wu (54001)\n",
      "Heidi Wudrick (41)\n",
      "Steven Xu (21526)\n",
      "Zexu Yan (142618)\n",
      "Gary Yao (215165)\n",
      "Jiaqi Yao (45346)\n",
      "Ray Yeh (2850)\n",
      "Mohamed Yousif (344195)\n",
      "Kevin Yu (143858)\n",
      "Dong-Tao Zhang (31356)\n",
      "Peter Zhang (16535)\n",
      "Will Zhang (14655)\n",
      "Zhipian Zhang (4092)\n",
      "Bruce Zhao (215503)\n",
      "Noah Adams (3787)\n",
      "Seiyoung Ahn (15044)\n",
      "Daniel Anatolie (181125)\n",
      "Pablo Arellano Sanchez Lara (73321)\n",
      "Enid Au (118454)\n",
      "Jenna Bains (29708)\n",
      "Ashley Barkworth (192812)\n",
      "Chris Bolton (34788)\n",
      "Lindsey Burnett (113143)\n",
      "Tristan Calderbank (14842)\n",
      "Amelia Casciola (33173)\n",
      "Joanne Chan (73347)\n",
      "Victoria Chang (195648)\n",
      "Daniel Chawla (144874)\n",
      "Eric Chen (66897)\n",
      "Jacky Chen (15068)\n",
      "Susan Chen (14848)\n",
      "Jordan Cheng (89890)\n",
      "Josh Cheung (191191)\n",
      "Jordan Chiu (149531)\n",
      "Andrew Choi (13105)\n",
      "Bryan Choi (103870)\n",
      "Joochan Choi (15706)\n",
      "Min Kyu Choi (73869)\n",
      "Marina Chun (50161)\n",
      "Jakrarat Chunnananda (39850)\n",
      "Adam Collins (6886)\n",
      "Angeli Corpin (139154)\n",
      "Rory Court (209200)\n",
      "Brendan Cuddihy (192345)\n",
      "Kayla Curtis (192813)\n",
      "Kelly Dang (144980)\n",
      "Mark Davidson (103971)\n",
      "Xavier dela Cruz (120706)\n",
      "Yue Deng (111471)\n",
      "Murtaza Dibbo (15414)\n",
      "Chi Duong (32691)\n",
      "Zeki Ekmekci (212819)\n",
      "Sadek Elbetar (14773)\n",
      "Jan Louis Evangelista (41482)\n",
      "Chenhao Fan (145008)\n",
      "Vera Fan (4705)\n",
      "Jiang Feng (234045)\n",
      "Alan Fisher (15651)\n",
      "Alexander Ford (212279)\n",
      "Cody Gagnon (15203)\n",
      "Ming Gao (192805)\n",
      "Ya Gao (82749)\n",
      "Parth Garg (153181)\n",
      "Alexis Gervacio (14693)\n",
      "Seif Ghazi (103843)\n",
      "Andrew Gourley (228365)\n",
      "Shreeshaa Goyal (44892)\n",
      "Mario Grebelski (188901)\n",
      "Laura Greenstreet (15712)\n",
      "Shri Grover (196442)\n",
      "Gregory Gzik (195649)\n",
      "Jason Hall (73872)\n",
      "Gavin Ham (14670)\n",
      "Frederic Alexandre Hayek (206976)\n",
      "Austin He (33134)\n",
      "Yizhuo He (82167)\n",
      "Peter Hodgson (212596)\n",
      "Shannon Hogan (17592)\n",
      "Jarrett Huang (192752)\n",
      "Cameron Huynh (149449)\n",
      "Jun Yu David Ju (14966)\n",
      "Mayesha Kabir (44799)\n",
      "Dianna Kan (32569)\n",
      "Alice Kim (15001)\n",
      "Andy Kim (191204)\n",
      "Taiga Kimura (15635)\n",
      "Michelle Kong (192767)\n",
      "Nicholas Kong (16526)\n",
      "Nada Kourkmas (15646)\n",
      "Andrew Lam (192811)\n",
      "Wesley Lam (14656)\n",
      "Liam Larson (96456)\n",
      "Ranky Lau (149525)\n",
      "Richard Lau (109257)\n",
      "Kelsey Law (15060)\n",
      "Gerald Lee (15089)\n",
      "Kevin Lee (144969)\n",
      "Ryan Lee (14696)\n",
      "Kalli Leung (191201)\n",
      "Daniel Levy (196904)\n",
      "Anthony Li (33251)\n",
      "Cecilia Li (82741)\n",
      "Stephen Li (192806)\n",
      "Yvonne Li (195578)\n",
      "Skylar Liang (33184)\n",
      "Cindy Lim (47187)\n",
      "Andy Lin (15058)\n",
      "David Liu (62705)\n",
      "Jordan Liu (14702)\n",
      "Benny Lo (196905)\n",
      "Marco Ma (41176)\n",
      "Mark McConnell (45367)\n",
      "Sam McConnell (15018)\n",
      "James Meng (144968)\n",
      "Natasha Miner (70615)\n",
      "Caleigh Minshall (48522)\n",
      "Robert Mo (14726)\n",
      "Tyler Moore (14631)\n",
      "Quintin Muncaster (38479)\n",
      "Hanae Nakajima (21917)\n",
      "Aayush Nanda (33507)\n",
      "Pranav Narang (103808)\n",
      "Dmitry Narkevich (24528)\n",
      "Wen Xing Pan (34376)\n",
      "Sam Parhimchik (195666)\n",
      "Harsh Patel (192799)\n",
      "Julilla Paul (120693)\n",
      "Koby Qu (45489)\n",
      "Timothy Schwarz (120702)\n",
      "Mark Shan (88973)\n",
      "Matthew Shin (14798)\n",
      "Frances Sin (14733)\n",
      "Raymond Situ (190410)\n",
      "Seiji Smith (139000)\n",
      "Simeon Stakic (116944)\n",
      "Kevin Sun (170593)\n",
      "Nanda Syahrasyad (149520)\n",
      "Andy Tang (15019)\n",
      "Evangeline Tay (139017)\n",
      "Angela Tian (34191)\n",
      "Anita Tse (14978)\n",
      "Cindy Tu (192798)\n",
      "Slava Uryumtsev (41116)\n",
      "Leqi Wan (1084)\n",
      "Hao Wang (3623)\n",
      "Ren Wang (29302)\n",
      "Yanzhao Wang (149433)\n",
      "Xindi Wei (12574)\n",
      "Taylor Whitney (212269)\n",
      "Ryan Wirth (110372)\n",
      "Annie Wong (71486)\n",
      "Kevin Wong (88975)\n",
      "Michelle Wong (196439)\n",
      "Stephanie Wong (14720)\n",
      "Uma Wu (192797)\n",
      "SIQIAO XIE (15123)\n",
      "Kevin Xu (26546)\n",
      "Tina Yang (15073)\n",
      "Cheryl Yao (22717)\n",
      "Vickie Yen (195903)\n",
      "Xueqi Zeng (33256)\n",
      "Alice Zhang (42134)\n",
      "Bruce Zhang (139006)\n",
      "Grace Zhang (33153)\n",
      "John Zhang (15658)\n",
      "Michael Zhang (189080)\n",
      "Terry Zhang (104015)\n",
      "Jiaqi Zhao (28841)\n",
      "Jacky Zheng (111473)\n",
      "Xiaojie Zhou (103822)\n",
      "Youcheng Zhu (144977)\n",
      "Marvin Agonos (68646)\n",
      "Naeema Al-Mridha (28447)\n",
      "Samuel Allan (30959)\n",
      "Tiara Allidina (111638)\n",
      "Rithvik Alluri (82270)\n",
      "Claire Anderson (14903)\n",
      "Regina Arcilla (109313)\n",
      "Seb Ban (16465)\n",
      "Sahil Bansal (28458)\n",
      "Ashley Barkworth (192812)\n",
      "Breyanne Bautista (25369)\n",
      "Shannon Benson (193752)\n",
      "Jessica Bo (14859)\n",
      "Cristian Brazales Molina (30156)\n",
      "Claude Bu (149519)\n",
      "Matthew Cam (21143)\n",
      "Yichen Cao (32440)\n",
      "Sebastiano Carlucci (33214)\n",
      "Amelia Casciola (33173)\n",
      "Robyn Castro (49632)\n",
      "Alex Champagne (33269)\n",
      "Raphael Chang Menoni (14742)\n",
      "Jeffrey Chang (71461)\n",
      "Benson Chen (15075)\n",
      "Janet Chen (191200)\n",
      "Rex Chen (197172)\n",
      "Susan Chen (14848)\n",
      "Terence Chen (43690)\n",
      "Victor Chen (15179)\n",
      "Zikun Chen (120627)\n",
      "Jordan Cheng (89890)\n",
      "Pengyu Cheng (33963)\n",
      "Timothy Cheng (149521)\n",
      "Adle Chiam Chiam (14770)\n",
      "Justin Chiasson (25186)\n",
      "Joochan Choi (15706)\n",
      "Lydia Choi (34261)\n",
      "William Choi (33189)\n",
      "Chantal Chung (31455)\n",
      "Janie Chung (34264)\n",
      "Mary Chung (125965)\n",
      "Adam Collins (6886)\n",
      "Dama Correch (83145)\n",
      "Alex Cotic-Ehn (209141)\n",
      "Bronwyn Damm (73323)\n",
      "Kelly Dang (144980)\n",
      "Rachit Dangayach (149500)\n",
      "Mark Davidson (103971)\n",
      "Yue Deng (111471)\n",
      "Anas Desouky (33236)\n",
      "Sheng Di (44877)\n",
      "Zi Rui Ding (91745)\n",
      "William Dougall (33020)\n",
      "Artun Duman (96248)\n",
      "Eric Duong (14829)\n",
      "Karim Eldegwy (33240)\n",
      "Bebo Elhosary (39872)\n",
      "Dan Estrin (139188)\n",
      "Long Yan Emily Fan (63632)\n",
      "Vera Fan (4705)\n",
      "Daniel Fang (111481)\n",
      "Farid Faraji (14721)\n",
      "Homen Feng (103824)\n",
      "Noah Finkielsztein (40090)\n",
      "Emily Fong (138995)\n",
      "Joao Freitas (133375)\n",
      "Darren Fu (14784)\n",
      "Mikayla Gairns (72177)\n",
      "Shinya Gao (3603)\n",
      "Ya Gao (82749)\n",
      "Hannah Generoso (15134)\n",
      "Katherine Germano De Aquino Lima (16518)\n",
      "Harpaul Gill (126002)\n",
      "Sam Goldwax (191198)\n",
      "Emily Gong (192235)\n",
      "Shreeshaa Goyal (44892)\n",
      "Anders Grasdal (34338)\n",
      "Mario Grebelski (188901)\n",
      "Shri Grover (196442)\n",
      "William Gu (33169)\n",
      "Nishat Gupta (46070)\n",
      "Ali Haghani (96422)\n",
      "Huili Han (31343)\n",
      "Akshay Handa (42260)\n",
      "Quinn Hanson (32606)\n",
      "Steven Harlos (195908)\n",
      "Amelia He (27529)\n",
      "Yizhuo He (82167)\n",
      "Dillon Higa (82056)\n",
      "Kevin Ho (21744)\n",
      "Brian Hong (15570)\n",
      "Gina Hong (25249)\n",
      "Sakib Hossain (15146)\n",
      "Jacob Hotz (25712)\n",
      "Chongqing Hou (141010)\n",
      "Kipp Hsieh (15137)\n",
      "Chenming Hu (95041)\n",
      "Grace Hu (34505)\n",
      "Sylvia Hu (13003)\n",
      "David Huang (33033)\n",
      "Hao Huang (45487)\n",
      "Jacqueline Huang (2790)\n",
      "KuanMin Huang (25352)\n",
      "Cameron Huynh (149449)\n",
      "Derin Ibikunle (33195)\n",
      "Akshat Jain (163645)\n",
      "Yaash Jain (16080)\n",
      "Anthony Jakob (180822)\n",
      "Nishad Jamaldeen (15457)\n",
      "Jamie Jeon (57933)\n",
      "Emily Jia (39040)\n",
      "Ruonan Jia (33172)\n",
      "Yuncheng Jia (149492)\n",
      "Kyle Jiang (33211)\n",
      "Dianna Kan (32569)\n",
      "Harminder Kandola (32964)\n",
      "Braedyn Kenzie (195774)\n",
      "Saif Khan (197864)\n",
      "Aman Khinda (144957)\n",
      "Andy Kim (191204)\n",
      "Jun Kim (32205)\n",
      "Jillian Kong (14911)\n",
      "Kristo Krugger (139302)\n",
      "Eugenie Lai (191345)\n",
      "Yongxin Lai (50102)\n",
      "Jian Lan (85386)\n",
      "Melody Lan (13805)\n",
      "Christian Laurence (15322)\n",
      "Eishan Lawrence (33265)\n",
      "Etienne Le Bouder (14708)\n",
      "Charmaine Lee (191736)\n",
      "Daniel Lee (111547)\n",
      "Justin Lee (191422)\n",
      "Kevin Lee (144969)\n",
      "Peter Lee (73283)\n",
      "Seungyup Lee (24140)\n",
      "Anthony Li (33251)\n",
      "David Li (191208)\n",
      "Jiayi Li (16457)\n",
      "Mingyang Li (117156)\n",
      "Ricky Li (135802)\n",
      "Songyang Li (34750)\n",
      "Tony Li (39857)\n",
      "Wuyang Li (15349)\n",
      "Yvonne Li (195578)\n",
      "Zhe Li (46280)\n",
      "David Liang (14876)\n",
      "Cindy Lim (47187)\n",
      "William Lim (15661)\n",
      "Hannah Lin (40147)\n",
      "Stanford Lin (1580)\n",
      "Rowan Lindsay (48126)\n",
      "Andrew Liu (33238)\n",
      "Daniel Liu (117279)\n",
      "David Liu (62705)\n",
      "Eric Liu (14705)\n",
      "Ever Liu (33358)\n",
      "Jordan Liu (14702)\n",
      "Michael Liu (73308)\n",
      "Monica Liu (194797)\n",
      "Vandy Liu (42071)\n",
      "Bryan Lo (83259)\n",
      "Weixi Long (16563)\n",
      "Dylan Lu (15540)\n",
      "Jie Lu (41832)\n",
      "Kaiming LU (47349)\n",
      "Eric Ma (137287)\n",
      "Marco Ma (41176)\n",
      "Jennifer MacFarlane (88959)\n",
      "Andrea Magbanua (111595)\n",
      "Tarang Mahapatra (63629)\n",
      "Aya Makhambetova (16435)\n",
      "Yi Ang Mao (31097)\n",
      "Tim Matsumoto (192657)\n",
      "Giulia Mattia (20825)\n",
      "Natasha Mattson (17152)\n",
      "Sahil Mazmudar (14793)\n",
      "Morgan Mo (73278)\n",
      "Ali Mohamed (149496)\n",
      "Cormac Mollitor (111788)\n",
      "Haseenah Molumo (12665)\n",
      "Tyler Moore (14631)\n",
      "Conor Morrison (163331)\n",
      "Nikki Motevaselolhagh (73300)\n",
      "Manlam Mou (166934)\n",
      "Daryn Mulholland (119558)\n",
      "GURVEER KAUR NA (151258)\n",
      "Hanae Nakajima (21917)\n",
      "Emma Nakamoto (13024)\n",
      "Chris Ng (149511)\n",
      "Philip Ng (34649)\n",
      "Natalie Ngan (190989)\n",
      "Kevin Nguyen (116920)\n",
      "Charlene Nicer (32713)\n",
      "Edmund Oh (13033)\n",
      "Ryan Oh (14641)\n",
      "Samuel Or (139001)\n",
      "Ryan Pattyson (138983)\n",
      "Emre Pekel (198176)\n",
      "Egor Peshkov (105374)\n",
      "Umut Polat (49488)\n",
      "Alex Ponomarov (44071)\n",
      "Caelin Preston (33191)\n",
      "Rodrigo Proen¿a (149523)\n",
      "Amy Promhouse (118481)\n",
      "Koby Qu (45489)\n",
      "Karn Rahal (15861)\n",
      "Ramon Rakow (153085)\n",
      "Josh Rayo (162259)\n",
      "Sarah Reny (168107)\n",
      "Michael Ruby (30161)\n",
      "Laura Ruiz (21114)\n",
      "Erik Ryhorchuk (118395)\n",
      "Fawaz Saleem (33206)\n",
      "Omar Salem (46322)\n",
      "Kiavash Samadi (15209)\n",
      "Arjan Sandhu (161615)\n",
      "Leann Santa Cruz (93732)\n",
      "Asia Schmok (28104)\n",
      "Corwin Shanner (196906)\n",
      "Mitchel Sharko (61316)\n",
      "Angus Shaw (209916)\n",
      "Betty Shea (74337)\n",
      "Jacky Sio (33190)\n",
      "Anastasiya Sokha (194151)\n",
      "Christopher Song (16476)\n",
      "Gautam Soni (14649)\n",
      "Simeon Stakic (116944)\n",
      "Tyler Steele (14767)\n",
      "Jie Su (144982)\n",
      "YUAN SUN (93265)\n",
      "Lirukshman Sundaralingam (109379)\n",
      "Serge Sych (111452)\n",
      "Aiden Synkova (14889)\n",
      "FIGALI TAHO (175442)\n",
      "Shushama Tahsin (24998)\n",
      "Derek Tam (208546)\n",
      "Jobina Tamminga (64559)\n",
      "Adrien Tang (17797)\n",
      "Andrea Tang (29294)\n",
      "Kyo Tang (139003)\n",
      "Tiffany Tang (33163)\n",
      "Kshitiz Tanwar (68741)\n",
      "Justin Tao (26292)\n",
      "Gorn Teptada (13051)\n",
      "David Thomas (18893)\n",
      "Angela Tian (34191)\n",
      "Jos¿ Torres Ju¿rez (228432)\n",
      "Brian Trieu (14785)\n",
      "Oscar Tu (196680)\n",
      "Shiv Vashisht (48961)\n",
      "Leqi Wan (1084)\n",
      "Francis Wang (33196)\n",
      "Jason Wang (153077)\n",
      "Jia Bin Wang (34244)\n",
      "John Wang (39938)\n",
      "Ren Wang (29302)\n",
      "Rui Wang (24833)\n",
      "Sari Wang (20977)\n",
      "Stella Wang (128053)\n",
      "Wumian Wang (149491)\n",
      "Yuyang Wei (15632)\n",
      "Yijia Wen (169311)\n",
      "Ella Wilson (32781)\n",
      "Ryan Wirth (110372)\n",
      "Michelle Wong (196439)\n",
      "Raymond Wong (73329)\n",
      "Stephanie Wong (14720)\n",
      "Trevin Wong (81)\n",
      "Andy Worth (3759)\n",
      "Ashley-Gail Wright (23233)\n",
      "TJ Wu (45912)\n",
      "Victor Wu (197100)\n",
      "Yiyun Xi (62656)\n",
      "Robin Xie (82)\n",
      "Kevin Xu (26546)\n",
      "Yuan Xu (15453)\n",
      "Sheena Yadav (33155)\n",
      "Rongzheng Yan (120757)\n",
      "Sam Yan (15675)\n",
      "Minghao Yang (163229)\n",
      "Xiaoan Yang (144954)\n",
      "Xinyue Yang (56891)\n",
      "Amy Yao (18715)\n",
      "Harry Yao (33242)\n",
      "Violet Ye (117282)\n",
      "Albert Yip (14731)\n",
      "James Yoo (161421)\n",
      "Ruixuan Yu (44948)\n",
      "Henry Zeng (15919)\n",
      "Alice Zhang (33268)\n",
      "Cindy Zhang (15571)\n",
      "David Zhang (195713)\n",
      "Fred Zhang (23256)\n",
      "Grace Zhang (33153)\n",
      "James Zhang (98347)\n",
      "John Zhang (15658)\n",
      "Shuaiqi Zhang (144997)\n",
      "Bruce Zhao (215503)\n",
      "Darming Zhao (33208)\n",
      "MengXin Zhao (14730)\n",
      "Cherry Zheng (111932)\n",
      "Jacky Zheng (111473)\n",
      "Lydia Zheng (23042)\n",
      "Zikang Zheng (152315)\n",
      "Julia Zhu (14869)\n",
      "Scoward Zhu (21643)\n",
      "Steven Zhu (33221)\n",
      "Tianyan Zhu (34138)\n",
      "Youcheng Zhu (144977)\n",
      "Kevin Zou (109246)\n",
      "Xiaoyu Zou (118382)\n",
      "Andrew Zulaybar (82256)\n",
      "Danielle Andriulaitis (97392)\n",
      "Bronwyn Baillie (65585)\n",
      "Naman Bansal (16442)\n",
      "Kajal Bhagat (38443)\n",
      "Qingyu Cai (1123)\n",
      "Jacky Chen (15068)\n",
      "Muyi Chen (46957)\n",
      "Naitong Chen (14818)\n",
      "Cici Cheng (2156)\n",
      "Lulu Ching (209934)\n",
      "Javier Cort¿s Orihuela (27204)\n",
      "Ke Dai (31012)\n",
      "Vicky Do (16266)\n",
      "Huaiwen Dong (26811)\n",
      "Daniel Du (34324)\n",
      "Ruiwen Fan (31096)\n",
      "Sarah Fedoroff (139214)\n",
      "Keer Feng (29821)\n",
      "XUMING FENG (243954)\n",
      "Zoe Fox (16529)\n",
      "Jianping Gao (16004)\n",
      "Mingyuan Gao (130990)\n",
      "Tevin Gill (16468)\n",
      "Xinhao Guo (82090)\n",
      "Brian Hong (15570)\n",
      "Din-Yuan Hsieh (193574)\n",
      "Sijia Hu (29868)\n",
      "April Huang (46082)\n",
      "Judy Huang (13740)\n",
      "Tavis Jamieson (120808)\n",
      "Arabella Jia (160283)\n",
      "Han Jiang (139331)\n",
      "Cathy Jiao (15072)\n",
      "Alice Kim (15001)\n",
      "Mark Kopani (16449)\n",
      "Jian Lan (85386)\n",
      "Ambre Ledoux (197782)\n",
      "Baichao Li (62762)\n",
      "Jerry Li (34265)\n",
      "Jiacheng Li (23444)\n",
      "Joyce Li (38185)\n",
      "Liangchen Li (23388)\n",
      "Melauria Li (23551)\n",
      "Qiwen Li (139293)\n",
      "Wuyang Li (15349)\n",
      "Xiaojie Li (43541)\n",
      "Yueyan Li (41959)\n",
      "Jewel Lin (192126)\n",
      "Yiying Lin (41606)\n",
      "Yuchen Lin (135785)\n",
      "Carol Liu (16427)\n",
      "Jiaoxue Liu (41440)\n",
      "Yushang Liu (161549)\n",
      "Yu-Hsiang Lo (14871)\n",
      "Kaiming LU (47349)\n",
      "Xuechun Lu (47880)\n",
      "Robert Lucy (205481)\n",
      "Eric Lusk-Jopson (44705)\n",
      "Yubin Lyu (16046)\n",
      "Hantao Mai (120677)\n",
      "Aya Makhambetova (16435)\n",
      "Adam Martens (64679)\n",
      "Si Miao (120618)\n",
      "Anelya Mynzhassarova (139292)\n",
      "Eva Ng (120676)\n",
      "Dilpreet Parmar (82018)\n",
      "Jared Pattison (16445)\n",
      "Jingle Qiu (117274)\n",
      "Matt Reid (209771)\n",
      "Kejin Ren (16441)\n",
      "Sarah Reny (168107)\n",
      "Ricardo Rivera Cardoso (15536)\n",
      "Yi Si (39180)\n",
      "Daniel Song (139303)\n",
      "Rachel Song (139306)\n",
      "Ziqi Su (46260)\n",
      "Lauren Tonello (163632)\n",
      "Belle Tong (161511)\n",
      "Leqi Wan (1084)\n",
      "Maggie Wan (34337)\n",
      "Dongkai Wang (128289)\n",
      "Hao Wang (3623)\n",
      "Weihong Wang (14683)\n",
      "Yi Wang (56983)\n",
      "Yijia Wen (169311)\n",
      "Chengsi Wu (217071)\n",
      "Qifang Wu (199336)\n",
      "yingying xia (206802)\n",
      "SIQIAO XIE (15123)\n",
      "Yiwen Xu (14715)\n",
      "Xinyi Yan (82752)\n",
      "Yuki Yang (26840)\n",
      "Chloe You (16451)\n",
      "Jenny Yu (191129)\n",
      "JIAPEI YU (128220)\n",
      "Anan Zhang (82091)\n",
      "Chao Zhang (14714)\n",
      "Daniel Zhang (110394)\n",
      "Haoran Zhang (45550)\n",
      "Lan Zhang (116846)\n",
      "Qingyue Zhang (21747)\n",
      "Zhexuan Zheng (15391)\n",
      "Zikang Zheng (152315)\n",
      "Weijia Zhong (14654)\n",
      "Chenliang Zhou (16469)\n",
      "Yury Zhuk (11874)\n",
      "Xiaoyu Zou (118382)\n",
      "Jero Abad (212262)\n",
      "Aishwarya Abhiram (17226)\n",
      "Emma Ackermann (10960)\n",
      "Mona Adibmoradi (3516)\n",
      "John Aguilar (154710)\n",
      "Elias Aguirre (103883)\n",
      "Su Young Ahn (73221)\n",
      "Asad Aizaz (39978)\n",
      "Reza Akhavan (4744)\n",
      "Hisham Al Hashmi (139172)\n",
      "Glaynel Alejo (120798)\n",
      "Aziz Alimov (39916)\n",
      "Rithvik Alluri (82270)\n",
      "Martin Aloise (35956)\n",
      "Neeku Amanat (13346)\n",
      "Kevin An (26683)\n",
      "Zike An (112837)\n",
      "Gareth Antle (149435)\n",
      "Amy Antonsen (39695)\n",
      "Eully Ao (13256)\n",
      "Leonardo Arreaza (125914)\n",
      "Ayman Azhar (13729)\n",
      "Fatum Bahamdun (13331)\n",
      "Gursaanj Bajaj (109240)\n",
      "Emily Ballon (101779)\n",
      "Mara Balvers (82897)\n",
      "Sahil Bansal (28458)\n",
      "Lexia Bao (27532)\n",
      "Seraph Bao (29187)\n",
      "Spandana Baruah (22389)\n",
      "Breyanne Bautista (25369)\n",
      "Melissa Bernstein (31511)\n",
      "Raunak Bhagat (128031)\n",
      "Simran Bhaidani (25000)\n",
      "Eric Bhang (111692)\n",
      "Harvir Bhattal (125894)\n",
      "Shirley Bi (105397)\n",
      "Maya Bird (99164)\n",
      "Lorenzo Bisceglia (123641)\n",
      "Luis Bolanos (15390)\n",
      "Nicole Bostan (10787)\n",
      "Brianne Boufford (123707)\n",
      "Josh Bowman (208551)\n",
      "Harman Brar (27342)\n",
      "Maya Brassard (13285)\n",
      "Cole Brauer (128166)\n",
      "Dylan Brown (73866)\n",
      "Katherine Buchanan (2859)\n",
      "Juan Camilo Burckhardt Acevedo (23054)\n",
      "Nathalie Buu (13058)\n",
      "David Cai (2355)\n",
      "Xuechun Cao (43278)\n",
      "Duncan Carlson (2962)\n",
      "Julia Chai (14444)\n",
      "Brendan Chan (117133)\n",
      "Diora Chan (3035)\n",
      "Joshua Chan (4380)\n",
      "Sara Chan (33797)\n",
      "Vita Chan (22683)\n",
      "Austin Chang (125898)\n",
      "Michelle Chang (125939)\n",
      "Philippe Chapdelaine (14672)\n",
      "Calvin Chen (163328)\n",
      "Charlotte Chen (117166)\n",
      "Chris Chen (33506)\n",
      "David Chen (11595)\n",
      "Elaine Chen (23535)\n",
      "Fiona Chen (2915)\n",
      "Jacques Chen (29498)\n",
      "Jihan Chen (27388)\n",
      "Liheng Chen (11662)\n",
      "Lily Chen (15386)\n",
      "Linkun Chen (33538)\n",
      "Rebecca Chen (44777)\n",
      "Roy Chen (15292)\n",
      "Shalen Chen (11762)\n",
      "Tianzong Chen (2516)\n",
      "Victor Chen (15179)\n",
      "Judy Cheng (139232)\n",
      "Maye Cheng (189522)\n",
      "Nicole Cheng (13347)\n",
      "Janelle Cheung (21762)\n",
      "Jeffrey Chew (117173)\n",
      "Hetty Chiang (39887)\n",
      "Justin Chiasson (25186)\n",
      "Jodi Chien (47628)\n",
      "Tonya CHIU (2660)\n",
      "Erica Choi (32576)\n",
      "Esther Choi (13373)\n",
      "Jae Sam Choi (212814)\n",
      "Jasmine Choi (13179)\n",
      "Suet Ching Choi (10764)\n",
      "Min Choo (73276)\n",
      "Gurpreet Chopra (117142)\n",
      "Chanelle Chow (13466)\n",
      "Joanne Chu (35465)\n",
      "Yuhsin Chu (97357)\n",
      "Harry Chuang (62645)\n",
      "Serena Chuang (117190)\n",
      "Marina Chun (50161)\n",
      "Chantal Chung (31455)\n",
      "Samantha Cibere (50062)\n",
      "Jaimy Coates (13380)\n",
      "Raven Condol (27299)\n",
      "Johann Cooper (34108)\n",
      "Mikaela Correa (33018)\n",
      "Andree Coschizza (88880)\n",
      "Liam Coyle (15176)\n",
      "Cassandra Cui (117193)\n",
      "Yuhan Cui (2770)\n",
      "Michael Cummings (117137)\n",
      "Ricky Curry (71288)\n",
      "Sherwyn D'Souza (15421)\n",
      "Kyle Da Silva (25964)\n",
      "Angela Dai (104025)\n",
      "Bronwyn Damm (73323)\n",
      "Kathryn Darby (125950)\n",
      "Mary Datan (159303)\n",
      "Sarah Day (20322)\n",
      "Joshua De Guzman (208490)\n",
      "Matthew De Rose (171603)\n",
      "Kara Deane (28544)\n",
      "Gurvir Dehal (15253)\n",
      "Heather DeHaven (15392)\n",
      "Jolene Deng (73291)\n",
      "Yue Deng (111471)\n",
      "Nima Derakhshan (43361)\n",
      "Angelli Dimatulac (20640)\n",
      "Fiel Dimayacyac (117118)\n",
      "Julian Ding (192225)\n",
      "Andrei Dobre (24309)\n",
      "Cassidy Donaldson (15256)\n",
      "JERRY DONG (33522)\n",
      "Rebecca Dos Remedios (208528)\n",
      "Kashish Doshi (76910)\n",
      "Morgan Dowling (2940)\n",
      "Shijunyan Du (4501)\n",
      "Lian Duan (15224)\n",
      "Christian Due (34814)\n",
      "Artun Duman (96248)\n",
      "Krishna Dwarka (13278)\n",
      "Mitchell Elholm (4306)\n",
      "Panda Elliott (13767)\n",
      "Kevin Elward (117158)\n",
      "Luke Enns (13308)\n",
      "Chengzhi Fan (53986)\n",
      "Erica Fan (125942)\n",
      "Long Yan Emily Fan (63632)\n",
      "Shuxian Fan (49359)\n",
      "Vera Fan (4705)\n",
      "Daniel Fang (111481)\n",
      "Farid Faraji (14721)\n",
      "Roberto Fedrigo (138022)\n",
      "Homen Feng (103824)\n",
      "Qianqian Feng (3737)\n",
      "Samantha Feng (208544)\n",
      "Catherine Fletcher (13433)\n",
      "Nathan Fong (2700)\n",
      "Olivia Foster (111720)\n",
      "Aisling Fothergill (14403)\n",
      "John Paul Francisco (25465)\n",
      "Gregory Freeman (144974)\n",
      "Denisse Freitas Rivas (16618)\n",
      "Cody Gagnon (15203)\n",
      "Kira Gallant (39820)\n",
      "Chuntong Gao (21980)\n",
      "Yilun GAO (144951)\n",
      "Parth Garg (153181)\n",
      "Amy George (212335)\n",
      "Tara Gholamian (88849)\n",
      "Farima Ghorbani (120792)\n",
      "Jessie Giddings (206525)\n",
      "Gura Gill (125960)\n",
      "Jeremy Gill (38121)\n",
      "Emily Gong (192235)\n",
      "Judy Gong (2954)\n",
      "Michael Gong (34693)\n",
      "Samuel Gong (87658)\n",
      "Ruiyu Gou (98406)\n",
      "Himanshu Goyal (31019)\n",
      "Joshua Green (44618)\n",
      "Michelle Gu (139267)\n",
      "Emma Gunn (15231)\n",
      "Hongxi Guo (32587)\n",
      "Katie Gyte (82261)\n",
      "Andrew Ha (39734)\n",
      "Jason Hall (73872)\n",
      "Anna Han (33987)\n",
      "Akshay Handa (42260)\n",
      "Chen HANG (144427)\n",
      "Alessandro Hardjono (123688)\n",
      "Aiden Harrington (73333)\n",
      "Carol He (81959)\n",
      "Jiangning He (1967)\n",
      "Sharon He (4404)\n",
      "Yizhuo He (82167)\n",
      "Maureen Hii (117205)\n",
      "Elsa Ho (44842)\n",
      "Richard Ho (151520)\n",
      "Sharmain Ho (40051)\n",
      "Carson Hoang (135828)\n",
      "Emily Hon (212301)\n",
      "Calvin Hong (4408)\n",
      "Chongqing Hou (141010)\n",
      "Chris Hou (13212)\n",
      "Emily Hsiao (47154)\n",
      "Han Hsiao (38026)\n",
      "Jeni Hsing (117125)\n",
      "Wu Jih Hsu (30085)\n",
      "Chenming Hu (95041)\n",
      "Hugo Hu (162220)\n",
      "Justin Hu (73312)\n",
      "Sylvia Hu (13003)\n",
      "Albert Huang (125968)\n",
      "Andrew Huang (4586)\n",
      "David Huang (33033)\n",
      "Eileen Huang (2890)\n",
      "Jacqueline Huang (2790)\n",
      "KuanMin Huang (25352)\n",
      "Ruolan Huang (2866)\n",
      "Samantha Huang (4374)\n",
      "Jessica Huh (148670)\n",
      "Christopher Hui (86798)\n",
      "Jeremy Hui (117114)\n",
      "JJ Hum (189526)\n",
      "Linus Hung (18027)\n",
      "Mark Hung (24751)\n",
      "Wesley Hunt (27509)\n",
      "Hebah Hussaina (46397)\n",
      "Julia Hwangbo (17801)\n",
      "Claire Iacono (156738)\n",
      "Gabriel Ieong (73295)\n",
      "Jocelyn Ip (2742)\n",
      "Daniel Israel (84655)\n",
      "Amir Jafarvand (28135)\n",
      "Eric Jang (128284)\n",
      "Yuree Jang (212545)\n",
      "Sophie Jansen (130956)\n",
      "Elizabeth Jeffs (2970)\n",
      "Kaylee Jeong (61512)\n",
      "Ken Jeong (33962)\n",
      "William Ji (33876)\n",
      "Emily Jia (39040)\n",
      "Carli Jones (13470)\n",
      "Tigris Joseph (22957)\n",
      "Li Ju (62755)\n",
      "Lisa Jung (82878)\n",
      "Michelle Jung (22015)\n",
      "Stephen Juwono (19362)\n",
      "Ali Ka (4211)\n",
      "Naoreen Kabir (1030)\n",
      "Pavneet Kalsi (30120)\n",
      "Kasra Kamal (40141)\n",
      "Nick Kamal (35484)\n",
      "Amy Kang (125954)\n",
      "Emma Kang (13171)\n",
      "Xinyu KANG (28800)\n",
      "Josie Kanu (13233)\n",
      "Sunny Kao (117124)\n",
      "Can Karacahisarli (25344)\n",
      "Emma Karlsen (10846)\n",
      "Napat Karnsakultorn (27573)\n",
      "Anna Kaveney (143879)\n",
      "Doru Kesriyeli (25292)\n",
      "Naomi Khan (25402)\n",
      "Shabab Khan (34291)\n",
      "Dhruv Khanna (47599)\n",
      "Amir Khorrami (111598)\n",
      "May Kikuchi (203353)\n",
      "Theresa Marie Kikuchi (25219)\n",
      "David Kim Kim (14687)\n",
      "Jason Kim (168518)\n",
      "Jihyun Kim (13474)\n",
      "Jonathan Kim (4412)\n",
      "Jubin Kim (198436)\n",
      "Seeone Kim (85418)\n",
      "Tae Hyung Kim (10794)\n",
      "Peter Ko (108134)\n",
      "Harkunwar Singh Kochar (6820)\n",
      "Ryuta Kojima (2999)\n",
      "Jessica Kong (25418)\n",
      "Sara Kowalski (11739)\n",
      "Austin Kvaale (30364)\n",
      "Rhett Lai (139195)\n",
      "Katherine Lam (125955)\n",
      "Deenah Laron (14528)\n",
      "Ranky Lau (149525)\n",
      "Wing Yeung Shar Lau (117136)\n",
      "Christian Laurence (15322)\n",
      "Lauren Lavoie (1151)\n",
      "Anson Law (208511)\n",
      "Daryna Lebed (44308)\n",
      "Chiara-lyse Lee (10842)\n",
      "Daniel Lee (111547)\n",
      "Harrison Lee (4155)\n",
      "Karen LEE (2749)\n",
      "Kiah Lee (23543)\n",
      "Kiaunna Lee (2974)\n",
      "Marshall Lee (152307)\n",
      "Peter Lee (73283)\n",
      "Sein Lee (33333)\n",
      "George Lei (44710)\n",
      "Tristan Lei (73339)\n",
      "Andrew Leong (32570)\n",
      "Madeleine Leroux (50572)\n",
      "Valerie Leung (57942)\n",
      "Ang Li (149528)\n",
      "Carmen Li (46227)\n",
      "Eve Li (31437)\n",
      "Helin Li (2758)\n",
      "Johnny Li (161093)\n",
      "Kobe Li (105162)\n",
      "Pei Sheng Li (83158)\n",
      "Ricky Li (135802)\n",
      "Sarah Li (10153)\n",
      "Xuxu Li (42145)\n",
      "Andy Liang (15366)\n",
      "Jennifer Liang (13020)\n",
      "Zipeng Liang (108850)\n",
      "Tina Liao (208497)\n",
      "Celine Liew (62217)\n",
      "Cindy Lim (47187)\n",
      "Hyunuk Lim (39244)\n",
      "Benny Lin (10798)\n",
      "Howard Lin (32693)\n",
      "Jordan Lin (112841)\n",
      "Mandy Lin (2874)\n",
      "Xindong Lin (13983)\n",
      "Daniel Liu (27773)\n",
      "Daniel Liu (117279)\n",
      "David Liu (62705)\n",
      "Deyu Liu (32147)\n",
      "Emma Liu (138967)\n",
      "Ever Liu (33358)\n",
      "Kehong Liu (42026)\n",
      "Michael Liu (73308)\n",
      "Sara Liu (13910)\n",
      "Vandy Liu (42071)\n",
      "YANG LIU (99482)\n",
      "Christine Lo (24764)\n",
      "Ivan Lo (13449)\n",
      "James Lo (117159)\n",
      "Gustavo Loachamin Ordo¿ez (1166)\n",
      "Sarah Lockwood (29754)\n",
      "Zhenting Long (86097)\n",
      "Audrey Lu (98445)\n",
      "Jie Lu (41832)\n",
      "Jimmy Lu (73327)\n",
      "Jonah Lu (117149)\n",
      "Lillian Lu (3039)\n",
      "Michelle Lu (117202)\n",
      "Xuechun Lu (47880)\n",
      "Guoyang Luan (76764)\n",
      "Ryan Lum (28157)\n",
      "Daryus Lung (151519)\n",
      "Joshua Luong (151516)\n",
      "Sadie Lye (83227)\n",
      "Graham Lynn (24345)\n",
      "Danielle Ma (24256)\n",
      "Josh Ma (27531)\n",
      "Rachel Ma (2814)\n",
      "Sam Ma (15341)\n",
      "Steven Ma (24230)\n",
      "Mahan Maazi (11629)\n",
      "Lila Mackenzie (73350)\n",
      "Tina Madani Kia (10797)\n",
      "Ian Mah (73307)\n",
      "Rachit Malik (73303)\n",
      "Tia Malloff (117168)\n",
      "Preet Mangat (105169)\n",
      "Yi Ang Mao (31097)\n",
      "Samantha Mar (208610)\n",
      "Jacques Marais (48319)\n",
      "Kit Martens (208713)\n",
      "Valentina Mata Mata (2677)\n",
      "Joanne Mathew (13165)\n",
      "Reginald McDonald (123382)\n",
      "Chris McKinnon (311569)\n",
      "Cameryn Meloche (11879)\n",
      "Lily Men (2997)\n",
      "Cass Menchions (5762)\n",
      "Haotian Meng (83387)\n",
      "Nikita Menon (14445)\n",
      "Julian Mentasti (128157)\n",
      "Cris Mihailescu (4099)\n",
      "Anthony Miyagi (13489)\n",
      "Morgan Mo (73278)\n",
      "Robert Mo (14726)\n",
      "Aliya Mohamed (131741)\n",
      "Musa Mohannad (19233)\n",
      "Haseenah Molumo (12665)\n",
      "Taylor Morrison (13168)\n",
      "Nikki Motevaselolhagh (73300)\n",
      "Quintin Muncaster (38479)\n",
      "Arielle Murad (15191)\n",
      "Kellin Murphy (82988)\n",
      "Shivani Mysuria (18197)\n",
      "Shreyas Naik (73351)\n",
      "Emma Nakamoto (13024)\n",
      "Taylor Navi-Lacasse (26632)\n",
      "Elli Newman (13223)\n",
      "Sally Newton-Mason (13766)\n",
      "Jacob Ng (19819)\n",
      "Jo Rene Ng (121515)\n",
      "Kipling Ng (128080)\n",
      "Philip Ng (34649)\n",
      "Sarah Ng (211470)\n",
      "Aaron Ngu Ngu (30135)\n",
      "Thai Nguyen Dinh (10230)\n",
      "David Nguyen (144970)\n",
      "Denise Nguyen (111696)\n",
      "Kelly Nguyen (10844)\n",
      "Mimi Nguyen (60505)\n",
      "Charlene Nicer (32713)\n",
      "Jacky Jiahao Niu (49295)\n",
      "Christina Oh (27823)\n",
      "Edmund Oh (13033)\n",
      "Julia Oh (4719)\n",
      "Gillian Okura (33416)\n",
      "Farah Omar (34839)\n",
      "Shane Ong (117208)\n",
      "Tess Osborne (45480)\n",
      "Tiffany Ou (25521)\n",
      "Kass Ouitayakul (149514)\n",
      "Zihui Ouyang (26024)\n",
      "Tugce Ozaydin (13995)\n",
      "Janice Pang (111716)\n",
      "Al Parillon (4165)\n",
      "Albert Park (52396)\n",
      "Sujin Park (40188)\n",
      "Tom Park (40093)\n",
      "Jasmine Parmar (13423)\n",
      "Brett Pasula (14488)\n",
      "Rutuja Pattanshetti (13231)\n",
      "Theodore  Pellegrin (139184)\n",
      "Nathan Perillat (112860)\n",
      "Brooks Perkins-Jechow (28844)\n",
      "Nicholas Peterson (81207)\n",
      "Lucas Philipp (125925)\n",
      "Hannah Phua (2991)\n",
      "Mark Pitblado (42000)\n",
      "Umut Polat (49488)\n",
      "Anthony Pookpun (208589)\n",
      "Jane Procyshyn (21713)\n",
      "Yi Xuan Qi (128230)\n",
      "YIFENG QIN (141008)\n",
      "Colton Quan (15368)\n",
      "Parisa Rahmatian (18038)\n",
      "Ramon Rakow (153085)\n",
      "Parker Ram (38057)\n",
      "Andre Ramkairsingh (128200)\n",
      "Kunal Ranger (4197)\n",
      "Aditya Rao (30143)\n",
      "Oliver Rechlin (212554)\n",
      "Sam Riddle (47314)\n",
      "Javier Rivera (13383)\n",
      "Laura Rodgers (16538)\n",
      "Jake Rushton (68694)\n",
      "Daniel Ryu (34055)\n",
      "Jaiten Saini (125896)\n",
      "Omar Salem (46322)\n",
      "Sam Salmasi (10781)\n",
      "Kiavash Samadi (15209)\n",
      "Alexandra San Pedro (2870)\n",
      "Charu Sankaran (15636)\n",
      "Leann Santa Cruz (93732)\n",
      "Rahnuma Sara (117169)\n",
      "Javier Sarria Bastidas (159299)\n",
      "Kara Schultz (117146)\n",
      "Sheetal Shajan (48184)\n",
      "Hannah Shariati (117183)\n",
      "Hallee Shearer (25365)\n",
      "Ben Shen (27307)\n",
      "James Shen (133384)\n",
      "Xiaodi Shen (83252)\n",
      "Joshua Shepherd (10903)\n",
      "Doris Shi (29885)\n",
      "Lanfang Shi (2862)\n",
      "Roy Shi (163148)\n",
      "Zhuangzhuang Shi (53132)\n",
      "Kathryn Simone (30419)\n",
      "Barry Sin (128204)\n",
      "Alam Singh (15418)\n",
      "Andy Siu (23260)\n",
      "Caitlyn Siu (10805)\n",
      "Felix Siu (73318)\n",
      "Nick Siu (73320)\n",
      "Seiji Smith (139000)\n",
      "Christine Soares (2899)\n",
      "Hossein Soltanian (10836)\n",
      "Sammy Song (73864)\n",
      "Sarah Song (82328)\n",
      "Edward Ssebuliba (29474)\n",
      "Maria Stamenkovic (117180)\n",
      "Charlotte Stewart (212355)\n",
      "Megan Stewart (23490)\n",
      "Edison Su (212815)\n",
      "Chang Sun (42742)\n",
      "Sarah Sun (5630)\n",
      "Sharon Sun (88838)\n",
      "Yiheng Sun (13984)\n",
      "Lirukshman Sundaralingam (109379)\n",
      "Gabrielle Sunderland (120779)\n",
      "Andrew Sung (73282)\n",
      "Grant Sutton (14572)\n",
      "Fiza Syal (10769)\n",
      "Theresa Tai (10774)\n",
      "Jordan Tam (42204)\n",
      "Jerrett Tan (208540)\n",
      "Teresa Tan (25087)\n",
      "Weiyoung Tan (68702)\n",
      "Rene Tandun (10820)\n",
      "Ernest Tang (10776)\n",
      "Joice Tang (24451)\n",
      "Kyo Tang (139003)\n",
      "Matthew Tang (15264)\n",
      "Kshitiz Tanwar (68741)\n",
      "Siqi Tao (139230)\n",
      "Towela Tembo (17711)\n",
      "Marcus Thian (152433)\n",
      "Meg Thibodeau (132630)\n",
      "Angela Tian (34191)\n",
      "Yuxin Tian (14052)\n",
      "Josh Tindall (33706)\n",
      "Michael Ton (67761)\n",
      "Andrew Tong (18592)\n",
      "Nawaratt Tonrungroj (47097)\n",
      "Manish Toofany (11685)\n",
      "Mangat Toor (46575)\n",
      "Khanh Linh Tran (119509)\n",
      "Eric Tsai (73279)\n",
      "Christopher Tse (14484)\n",
      "Ethan Tse (10833)\n",
      "Sincere Tse (28538)\n",
      "Wayne Tse (11708)\n",
      "Shenia Tung (25404)\n",
      "Prakruti Uday (34135)\n",
      "Gabrielle Vaillancourt Ehling (128093)\n",
      "Miguel Valarao (192175)\n",
      "Gerrit Van Esch (37290)\n",
      "Lasya Vankayala (105170)\n",
      "Natalie Varga (13111)\n",
      "Mieke Vink (28360)\n",
      "Petal Vitis (60469)\n",
      "Oskar von Wahl (13093)\n",
      "Katie Wai (44306)\n",
      "Lauren Walgren (128073)\n",
      "Ben Walker (43934)\n",
      "Adam Wan (45581)\n",
      "Leqi Wan (1084)\n",
      "Mandy Wan (198330)\n",
      "Colin Wang (45566)\n",
      "Edward Wang (73859)\n",
      "Jeffrey Wang (14361)\n",
      "Mars Wang (73280)\n",
      "Miru Wang (13885)\n",
      "Ruihao Wang (161572)\n",
      "Siqi Wang (14293)\n",
      "Tiana Wang (10806)\n",
      "Tracy Wang (27902)\n",
      "Yuheng Wang (117290)\n",
      "Alan Ward (9731)\n",
      "Yilin Wei (2373)\n",
      "Caleb Weinhagen (13042)\n",
      "Annika Wevers (128113)\n",
      "Alannah Wilson (30155)\n",
      "Gabe Wilson (13218)\n",
      "Nik Wilson (139246)\n",
      "Helena Winata (27372)\n",
      "Alvin Wong (208481)\n",
      "Daniel Wong (117181)\n",
      "Eunice Wong (13397)\n",
      "Jennifer Wong (25351)\n",
      "Jonathan Wong (203823)\n",
      "Krystal Wong (73344)\n",
      "Nolan Wong (25340)\n",
      "Raymond Wong (73329)\n",
      "Andy Worth (3759)\n",
      "Benjamin Wu (54001)\n",
      "Harin Wu (88840)\n",
      "Heng Wu (13002)\n",
      "Jessica Wu (15708)\n",
      "Jichun Wu (15333)\n",
      "June Wu (102812)\n",
      "Tina Wu (73337)\n",
      "Tony Wu (49944)\n",
      "William Wu (4388)\n",
      "Yang Xia (197460)\n",
      "Michael Xian (15373)\n",
      "Yifei Xiao (117271)\n",
      "SIQIAO XIE (15123)\n",
      "Cynthia Xing (117278)\n",
      "YuXuan Xiong (13306)\n",
      "Denise Xu (116803)\n",
      "George Xu (4386)\n",
      "Joy Xu (143854)\n",
      "Kevin Xu (26546)\n",
      "Cathy Yan (29673)\n",
      "Nathan Yan (212326)\n",
      "Sam Yan (15675)\n",
      "Zexu Yan (142618)\n",
      "Daniela Yanez Ortuno (139249)\n",
      "Lily Yang (17290)\n",
      "Sunnie Yang (27254)\n",
      "Tina Yang (2885)\n",
      "Xiaoan Yang (144954)\n",
      "Gary Yao (215165)\n",
      "Phoebe Yap (128091)\n",
      "Tim Yaroshuk (208499)\n",
      "Enoch Yau (125910)\n",
      "Cathy Ye (112859)\n",
      "Manaswi Yerrabattini (26662)\n",
      "Vanessa Yeung (3009)\n",
      "Owen Yin (34832)\n",
      "Kang Mu Yoo (17256)\n",
      "Sam Young (44396)\n",
      "Angela Yu (3028)\n",
      "Grace Yu (2813)\n",
      "Ken Yu (28590)\n",
      "Megan Yu (13038)\n",
      "Timothy Yu (26692)\n",
      "Jack Yuan (47096)\n",
      "Jackson Yuan (15249)\n",
      "Michelle Yuan (11548)\n",
      "Trista Yuan (2711)\n",
      "Marty Yue (71458)\n",
      "Sandy Yuen (3228)\n",
      "Wesley Yuen (23909)\n",
      "Amy Yung (19514)\n",
      "Aya Zakaria (208567)\n",
      "Irina Zemlyankina (46381)\n",
      "Amber Zhang (46552)\n",
      "Daniel Zhang (110394)\n",
      "Fred Zhang (23256)\n",
      "Jenny Zhang (113293)\n",
      "Jiahe Zhang (45317)\n",
      "Leo Zhang (10155)\n",
      "Manni Zhang (61452)\n",
      "Wenxin Zhang (44757)\n",
      "Wilson Zhang (4392)\n",
      "Wucheng Zhang (13992)\n",
      "Yijia Zhang (4206)\n",
      "Yuze Zhang (139189)\n",
      "Zhipian Zhang (4092)\n",
      "Bruce Zhao (215503)\n",
      "Jodie Zhao (2878)\n",
      "Steven Zhao (38145)\n",
      "Justin Zheng (98469)\n",
      "Lydia Zheng (23042)\n",
      "Xinxian Zheng (158650)\n",
      "Zikang Zheng (152315)\n",
      "Anna Zhitnitsky (125920)\n",
      "Alice Zhou (21256)\n",
      "Bill Zhou (73874)\n",
      "Kevin Zhou (13418)\n",
      "Michael Zhou (73313)\n",
      "Rebecca ZHOU (2701)\n",
      "Sylvia Zhou (26512)\n",
      "Tiantai Zhou (2152)\n",
      "Tony Zhou (125947)\n",
      "LIANGYU ZHU (204724)\n",
      "Peiyuan Zhu (14786)\n",
      "Youcheng Zhu (144977)\n",
      "Ziqing Zhu (23850)\n",
      "Ziqing Zhu (166870)\n",
      "Xiaoyu Zou (118382)\n",
      "Andrew Zulaybar (82256)\n",
      "Chaeree An (45022)\n",
      "Zike An (112837)\n",
      "Alexandre Avreline (144981)\n",
      "Lu Bai (11637)\n",
      "Kajal Bhagat (38443)\n",
      "Shuanglin Cao (27250)\n",
      "Xuechun Cao (43278)\n",
      "Ian Chan (33734)\n",
      "Conway Chen (98374)\n",
      "Jacky Chen (15068)\n",
      "Linkun Chen (33538)\n",
      "Naitong Chen (14818)\n",
      "Wei Chen (14746)\n",
      "Zikun Chen (120627)\n",
      "Jeremy Chiu (44073)\n",
      "Brian Choi (139284)\n",
      "Brendan Cuddihy (192345)\n",
      "Tong Cui (117292)\n",
      "Ben Daly-Grafstein (14637)\n",
      "Henry Deng (120695)\n",
      "Alisa Dmitrieva (24796)\n",
      "Daniel Du (34324)\n",
      "Aman Faruqui (82838)\n",
      "Fan Feng (163329)\n",
      "Viral Galaiya (184549)\n",
      "Jiuning Gao (83150)\n",
      "Tevin Gill (16468)\n",
      "Josianne Haag (13450)\n",
      "Elijah Ho (139194)\n",
      "Sahand Hosseini (82715)\n",
      "Chenming Hu (95041)\n",
      "Sylvia Hu (13003)\n",
      "Hao Huang (45487)\n",
      "Mabel Huang (30377)\n",
      "Yuxiang Huang (31060)\n",
      "Arabella Jia (160283)\n",
      "Jayde Jiang (117242)\n",
      "Yifan Jiang (82865)\n",
      "James Johnson (191166)\n",
      "Linky Kong (56930)\n",
      "Patrick Kong (31053)\n",
      "Kristo Krugger (139302)\n",
      "Darren Ku (15312)\n",
      "Austin Kwok (14925)\n",
      "Sunny Kwon (52112)\n",
      "Joseph Lachowicz (120777)\n",
      "Ada Lai (61360)\n",
      "Vincent Lam (138094)\n",
      "Wesley Lam (14656)\n",
      "Danny Lee (33250)\n",
      "Hyun Woo Lee (15017)\n",
      "John Lee (138986)\n",
      "Michelle Lee (13141)\n",
      "Seren Lee (42304)\n",
      "Jerry Li (34265)\n",
      "Jiacheng Li (23444)\n",
      "Jun Li (171829)\n",
      "Philip Li (174017)\n",
      "Songyang Li (34750)\n",
      "Xiang Li (192130)\n",
      "Xiaojia Li (105175)\n",
      "Yuchen Lin (135785)\n",
      "Colen Liu (118359)\n",
      "Jiaoxue Liu (41440)\n",
      "Ruoxing Liu (21765)\n",
      "Yuqi Liu (128022)\n",
      "Yuru Liu (15374)\n",
      "Yushang Liu (161549)\n",
      "Bryan Lo (83259)\n",
      "Jinhao Lu (64655)\n",
      "Wentao Lu (161968)\n",
      "Qiyuan Luo (33548)\n",
      "Marco Ma (41176)\n",
      "Lila Mackenzie (73350)\n",
      "Ostap Manastyrski (45896)\n",
      "Chloe Mao (34258)\n",
      "Hayden McTavish (73345)\n",
      "Jae Millar (32150)\n",
      "Conor Morrison (163331)\n",
      "Rachid Mounla (48468)\n",
      "Shirley Mu (44464)\n",
      "Angela Ng (40172)\n",
      "Eva Ng (120676)\n",
      "Michelle Ng (103947)\n",
      "Martha Ni (44935)\n",
      "Lykke Oestbom (209860)\n",
      "Zihui Ouyang (26024)\n",
      "Shiqi Pan (126111)\n",
      "Ken Pang (62795)\n",
      "Lulu Pei (33417)\n",
      "Nicola Popper (13786)\n",
      "Shuoxuan Qian (17028)\n",
      "Kejin Ren (16441)\n",
      "Shahriar Shayesteh (31471)\n",
      "Lin Shi (111431)\n",
      "Yi Si (39180)\n",
      "Kristy Siu (15080)\n",
      "Daniel Song (139303)\n",
      "Rachel Song (139306)\n",
      "Chang Sun (42742)\n",
      "Jessica Sun (25138)\n",
      "Yingjun Sun (82884)\n",
      "Gabrielle Sunderland (120779)\n",
      "Boyi Tang (33025)\n",
      "Berenice Teo (209939)\n",
      "Joseph Thomas (30027)\n",
      "Cory To (149437)\n",
      "Claudine Tu (64643)\n",
      "Onur Tuna (34336)\n",
      "Shenia Tung (25404)\n",
      "Slava Uryumtsev (41116)\n",
      "Gurinder Walia (120704)\n",
      "Leqi Wan (1084)\n",
      "Angie Wang (41890)\n",
      "Dongkai Wang (128289)\n",
      "Hao Wang (3623)\n",
      "Nick Wang (16101)\n",
      "Ren Wang (29302)\n",
      "Tiger Wang (134667)\n",
      "Xiaoce Wang (31050)\n",
      "Zitong Wang (149431)\n",
      "Liuhua Wu (149516)\n",
      "Ziwei Wu (144950)\n",
      "Tian Xie (176479)\n",
      "Yiwen Xu (14715)\n",
      "Rongzheng Yan (120757)\n",
      "Alistair Yee (15686)\n",
      "Weijia Yin (90920)\n",
      "Steve Yoon (66263)\n",
      "Chloe You (16451)\n",
      "Wongelawit Zewde (193228)\n",
      "Denghuang Zhan (39834)\n",
      "Jenny Zhang (113293)\n",
      "Manni Zhang (61452)\n",
      "Wenxin Zhang (44757)\n",
      "Zhexuan Zheng (15391)\n",
      "Zikang Zheng (152315)\n",
      "CHEN ZHU (210040)\n",
      "Dennis Zhu (27491)\n",
      "Yisheng Zhu (48558)\n",
      "Yury Zhuk (11874)\n",
      "Xiaoyu Zou (118382)\n",
      "Andrew Zulaybar (82256)\n"
     ]
    }
   ],
   "source": [
    "for user in all_users:\n",
    "    for u in user:\n",
    "        print(u)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(all_users)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'User' object has no attribute 'get'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-60-ff6fa2c3e62c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mreduced_users\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0muser\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mall_users\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m     \u001b[0mreduced_users\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0muser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mkeys_to_keep\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m<ipython-input-60-ff6fa2c3e62c>\u001b[0m in \u001b[0;36m<dictcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mreduced_users\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0muser\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mall_users\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m     \u001b[0mreduced_users\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0muser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mkeys_to_keep\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m: 'User' object has no attribute 'get'"
     ]
    }
   ],
   "source": [
    "reduced_users = []\n",
    "for user in all_users:\n",
    "    reduced_users.append({k: user.get(k, None) for k in keys_to_keep})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "keys_to_keep = ['user_name']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'User' object has no attribute 'get'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-62-ff6fa2c3e62c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mreduced_users\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0muser\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mall_users\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m     \u001b[0mreduced_users\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0muser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mkeys_to_keep\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m<ipython-input-62-ff6fa2c3e62c>\u001b[0m in \u001b[0;36m<dictcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mreduced_users\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0muser\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mall_users\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m     \u001b[0mreduced_users\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0muser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mkeys_to_keep\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m: 'User' object has no attribute 'get'"
     ]
    }
   ],
   "source": [
    "reduced_users = []\n",
    "for user in all_users:\n",
    "    reduced_users.append({k: user.get(k, None) for k in keys_to_keep})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Farshid Agharebparast (185967)\n"
     ]
    }
   ],
   "source": [
    "print(all_users[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "[]\n"
     ]
    }
   ],
   "source": [
    "user_names = []\n",
    "\n",
    "for c in mycourses:\n",
    "    for user in all_users:\n",
    "        user_names.append(user.short_name)\n",
    "    \n",
    "print(len(user_names))\n",
    "\n",
    "print(user_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame(all_users)\n",
    "df.to_csv('all_users.csv', header=True, index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import json"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame(user_names)\n",
    "df.to_csv('user_names.csv', header=True, index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Farshid Agharebparast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Kunal Aildasani</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Gagan Bhatia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Kofi Buahin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Cindy Cen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Farbod Chamanian</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Lily Chen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Tianzong Chen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Erica Choi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Abigail Climacosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Erica Commons</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Tasha Coote</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Brooke Dai</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Mary Datan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Zi Rui Ding</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Homen Feng</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Jorge Flores</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>John Paul Francisco</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Arwa Gazzaz</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Alexandra Gil</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Ao Lin Gong</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Michelle Gu</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Nakul Gupta</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Shubham Gupta</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Dhiraj Hariramani</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Emily Hon</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Gina Hong</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Mery Hu Zhao</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Julie Huang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Jessica Huh</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1467</th>\n",
       "      <td>Angie Wang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1468</th>\n",
       "      <td>Dongkai Wang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1469</th>\n",
       "      <td>Hao Wang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1470</th>\n",
       "      <td>Nick Wang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1471</th>\n",
       "      <td>Ren Wang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1472</th>\n",
       "      <td>Tiger Wang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1473</th>\n",
       "      <td>Xiaoce Wang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1474</th>\n",
       "      <td>Zitong Wang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1475</th>\n",
       "      <td>Liuhua Wu</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1476</th>\n",
       "      <td>Ziwei Wu</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1477</th>\n",
       "      <td>Tian Xie</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1478</th>\n",
       "      <td>Yiwen Xu</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1479</th>\n",
       "      <td>Rongzheng Yan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1480</th>\n",
       "      <td>Alistair Yee</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1481</th>\n",
       "      <td>Weijia Yin</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1482</th>\n",
       "      <td>Steve Yoon</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1483</th>\n",
       "      <td>Chloe You</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1484</th>\n",
       "      <td>Wongelawit Zewde</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1485</th>\n",
       "      <td>Denghuang Zhan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1486</th>\n",
       "      <td>Jenny Zhang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1487</th>\n",
       "      <td>Manni Zhang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1488</th>\n",
       "      <td>Wenxin Zhang</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1489</th>\n",
       "      <td>Zhexuan Zheng</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1490</th>\n",
       "      <td>Zikang Zheng</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1491</th>\n",
       "      <td>CHEN ZHU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1492</th>\n",
       "      <td>Dennis Zhu</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1493</th>\n",
       "      <td>Yisheng Zhu</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1494</th>\n",
       "      <td>Yury Zhuk</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1495</th>\n",
       "      <td>Xiaoyu Zou</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1496</th>\n",
       "      <td>Andrew Zulaybar</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1497 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                          0\n",
       "0     Farshid Agharebparast\n",
       "1           Kunal Aildasani\n",
       "2              Gagan Bhatia\n",
       "3               Kofi Buahin\n",
       "4                 Cindy Cen\n",
       "5          Farbod Chamanian\n",
       "6                 Lily Chen\n",
       "7             Tianzong Chen\n",
       "8                Erica Choi\n",
       "9         Abigail Climacosa\n",
       "10            Erica Commons\n",
       "11              Tasha Coote\n",
       "12               Brooke Dai\n",
       "13               Mary Datan\n",
       "14              Zi Rui Ding\n",
       "15               Homen Feng\n",
       "16             Jorge Flores\n",
       "17      John Paul Francisco\n",
       "18              Arwa Gazzaz\n",
       "19            Alexandra Gil\n",
       "20              Ao Lin Gong\n",
       "21              Michelle Gu\n",
       "22              Nakul Gupta\n",
       "23            Shubham Gupta\n",
       "24        Dhiraj Hariramani\n",
       "25                Emily Hon\n",
       "26                Gina Hong\n",
       "27             Mery Hu Zhao\n",
       "28              Julie Huang\n",
       "29              Jessica Huh\n",
       "...                     ...\n",
       "1467             Angie Wang\n",
       "1468           Dongkai Wang\n",
       "1469               Hao Wang\n",
       "1470              Nick Wang\n",
       "1471               Ren Wang\n",
       "1472             Tiger Wang\n",
       "1473            Xiaoce Wang\n",
       "1474            Zitong Wang\n",
       "1475              Liuhua Wu\n",
       "1476               Ziwei Wu\n",
       "1477               Tian Xie\n",
       "1478               Yiwen Xu\n",
       "1479          Rongzheng Yan\n",
       "1480           Alistair Yee\n",
       "1481             Weijia Yin\n",
       "1482             Steve Yoon\n",
       "1483              Chloe You\n",
       "1484       Wongelawit Zewde\n",
       "1485         Denghuang Zhan\n",
       "1486            Jenny Zhang\n",
       "1487            Manni Zhang\n",
       "1488           Wenxin Zhang\n",
       "1489          Zhexuan Zheng\n",
       "1490           Zikang Zheng\n",
       "1491               CHEN ZHU\n",
       "1492             Dennis Zhu\n",
       "1493            Yisheng Zhu\n",
       "1494              Yury Zhuk\n",
       "1495             Xiaoyu Zou\n",
       "1496        Andrew Zulaybar\n",
       "\n",
       "[1497 rows x 1 columns]"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "counter = df[0].value_counts().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [],
   "source": [
    "counter.columns = ['user_name','count']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [],
   "source": [
    "counter.to_csv('user_counter.csv', header=True, index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                     user_name  count\n",
      "0                     Leqi Wan      6\n",
      "1                   Daniel Liu      4\n",
      "2                   Xiaoyu Zou      4\n",
      "3                 Zikang Zheng      4\n",
      "4                    David Liu      3\n",
      "5               Kristo Krugger      3\n",
      "6                     Vera Fan      3\n",
      "7                  Chenming Hu      3\n",
      "8                   Homen Feng      3\n",
      "9                     Kevin Xu      3\n",
      "10                    Marco Ma      3\n",
      "11                   Sylvia Hu      3\n",
      "12                Youcheng Zhu      3\n",
      "13                   Cindy Lim      3\n",
      "14                  Jacky Chen      3\n",
      "15                  SIQIAO XIE      3\n",
      "16                    Hao Wang      3\n",
      "17                  Bruce Zhao      3\n",
      "18                   Yizhuo He      3\n",
      "19                 Shenia Tung      3\n",
      "20             Andrew Zulaybar      3\n",
      "21                    Ren Wang      3\n",
      "22                 Angela Tian      3\n",
      "23                    Yue Deng      3\n",
      "24                 Stella Wang      2\n",
      "25                  Mary Datan      2\n",
      "26                Matthew Tang      2\n",
      "27               KuanMin Huang      2\n",
      "28              Kshitiz Tanwar      2\n",
      "29                  Daniel Lee      2\n",
      "...                        ...    ...\n",
      "1240                 Jewel Lin      1\n",
      "1241             Amir Khorrami      1\n",
      "1242                 Lian Duan      1\n",
      "1243                  Owen Yin      1\n",
      "1244                 Anson Law      1\n",
      "1245               Arwa Gazzaz      1\n",
      "1246                  Yiyun Xi      1\n",
      "1247  Frederic Alexandre Hayek      1\n",
      "1248                Qingyu Cai      1\n",
      "1249                Wu Jih Hsu      1\n",
      "1250                Henry Deng      1\n",
      "1251                 Nick Wang      1\n",
      "1252               Trevin Wong      1\n",
      "1253             Shuoxuan Qian      1\n",
      "1254               Gabe Wilson      1\n",
      "1255              Andrew Leong      1\n",
      "1256               Brian Trieu      1\n",
      "1257                  Grace Hu      1\n",
      "1258                Yiheng Sun      1\n",
      "1259              Dama Correch      1\n",
      "1260          Naeema Al-Mridha      1\n",
      "1261     Danielle Andriulaitis      1\n",
      "1262            Jared Pattison      1\n",
      "1263                 Jiwon Kim      1\n",
      "1264                Monica Liu      1\n",
      "1265               Kofi Buahin      1\n",
      "1266              Jaiten Saini      1\n",
      "1267                 Han Jiang      1\n",
      "1268            Alex Ponomarov      1\n",
      "1269             Ryan Pattyson      1\n",
      "\n",
      "[1270 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "print(counter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
